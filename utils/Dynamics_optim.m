function [d2q, Fc] = Dynamics_optim(q,dq,tau,contact)
    % B = [0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;1,0,0,0,0,0,0,0,0,0;0,1,0,0,0,0,0,0,0,0;0,0,1,0,0,0,0,0,0,0;0,0,0,1,0,0,0,0,0,0;0,0,0,0,1,0,0,0,0,0;0,0,0,0,0,1,0,0,0,0;0,0,0,0,0,0,1,0,0,0;0,0,0,0,0,0,0,1,0,0;0,0,0,0,0,0,0,0,1,0;0,0,0,0,0,0,0,0,0,1];
    [D, ~, ~, J, dJ, h] = CassieDynamics_Full(q,dq,contact);
    qa = q([1,2,3,4,5,6,7,8,9,10,13,14,15,16,17,20]);
    dqa = dq([1,2,3,4,5,6,7,8,9,10,13,14,15,16,17,20]);
    if size(J,1) > 0
        h = h - [zeros(6,1);tau];
        w1 = 1;
        r1 = 1e-2 * diag([0;1;0;1;0;1;ones(10,1)]);
        r2 = 1e-2 * eye(size(J,1));
        A = [D + J'* J + r1, -D'* J';...
             -J * D, w1 * (J * J') + r2];
        b = [D'*h + w1 * J' * (dJ * dqa);...
             -J * h];
        sol = - pinv(A) * b;
        d2q = sol(1:16);
        Fc = sol(17:end);
    else
        d2q = D^(-1) * ([zeros(6,1);tau] - h);
        Fc = 0;
    end
end
