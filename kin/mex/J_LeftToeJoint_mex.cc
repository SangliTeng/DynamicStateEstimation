/*
 * Automatically Generated from Mathematica.
 * Mon 25 Jun 2018 14:53:27 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t3290;
  double t3337;
  double t3438;
  double t3217;
  double t3457;
  double t2950;
  double t3325;
  double t3468;
  double t3472;
  double t3474;
  double t3480;
  double t3484;
  double t3494;
  double t3649;
  double t3660;
  double t3662;
  double t3673;
  double t3610;
  double t3614;
  double t3638;
  double t3681;
  double t3810;
  double t3826;
  double t3831;
  double t3855;
  double t3783;
  double t3794;
  double t3805;
  double t3864;
  double t3866;
  double t3867;
  double t3888;
  double t3905;
  double t3906;
  double t3916;
  double t3928;
  double t3935;
  double t3936;
  double t3968;
  double t3972;
  double t3978;
  double t3985;
  double t3988;
  double t3990;
  double t3998;
  double t4006;
  double t4007;
  double t4009;
  double t4017;
  double t4018;
  double t4020;
  double t4022;
  double t4024;
  double t4028;
  double t4031;
  double t4043;
  double t4047;
  double t4050;
  double t4063;
  double t4070;
  double t4073;
  double t4077;
  double t4078;
  double t4082;
  double t4090;
  double t4096;
  double t4098;
  double t4102;
  double t4118;
  double t4119;
  double t4123;
  double t3049;
  double t3151;
  double t3186;
  double t3204;
  double t3541;
  double t3570;
  double t4144;
  double t4145;
  double t4146;
  double t4148;
  double t4149;
  double t4150;
  double t3672;
  double t3674;
  double t3678;
  double t3682;
  double t3691;
  double t3732;
  double t4154;
  double t4155;
  double t4156;
  double t3842;
  double t3858;
  double t3862;
  double t3868;
  double t3871;
  double t3875;
  double t3910;
  double t3924;
  double t3927;
  double t4175;
  double t4178;
  double t4179;
  double t4185;
  double t4186;
  double t4188;
  double t3944;
  double t3958;
  double t3966;
  double t3992;
  double t4001;
  double t4002;
  double t4192;
  double t4194;
  double t4195;
  double t4197;
  double t4199;
  double t4201;
  double t4011;
  double t4013;
  double t4014;
  double t4030;
  double t4037;
  double t4041;
  double t4210;
  double t4214;
  double t4217;
  double t4222;
  double t4228;
  double t4230;
  double t4057;
  double t4058;
  double t4062;
  double t4083;
  double t4093;
  double t4094;
  double t4234;
  double t4237;
  double t4238;
  double t4241;
  double t4242;
  double t4245;
  double t4108;
  double t4110;
  double t4113;
  double t4247;
  double t4248;
  double t4249;
  double t4251;
  double t4252;
  double t4253;
  double t4276;
  double t4277;
  double t4279;
  double t4287;
  double t4289;
  double t4290;
  double t4294;
  double t4295;
  double t4296;
  double t4298;
  double t4299;
  double t4300;
  double t4302;
  double t4303;
  double t4304;
  double t4306;
  double t4307;
  double t4308;
  double t4310;
  double t4312;
  double t4313;
  double t4316;
  double t4317;
  double t4318;
  double t4321;
  double t4322;
  double t4324;
  double t4328;
  double t4329;
  double t4330;
  double t4332;
  double t4333;
  double t4334;
  double t4352;
  double t4353;
  double t4354;
  double t4365;
  double t4366;
  double t4367;
  double t4369;
  double t4370;
  double t4371;
  double t4373;
  double t4374;
  double t4375;
  double t4378;
  double t4381;
  double t4383;
  double t4386;
  double t4387;
  double t4388;
  double t4390;
  double t4392;
  double t4393;
  double t4396;
  double t4397;
  double t4400;
  double t4402;
  double t4403;
  double t4404;
  double t4406;
  double t4407;
  double t4408;
  double t4410;
  double t4411;
  double t4412;
  double t4429;
  double t4430;
  double t4431;
  double t4438;
  double t4439;
  double t4441;
  double t4444;
  double t4447;
  double t4448;
  double t4451;
  double t4452;
  double t4455;
  double t4457;
  double t4458;
  double t4459;
  double t4461;
  double t4462;
  double t4463;
  double t4465;
  double t4466;
  double t4467;
  double t4471;
  double t4472;
  double t4475;
  double t4477;
  double t4479;
  double t4480;
  double t4484;
  double t4485;
  double t4486;
  double t4488;
  double t4489;
  double t4490;
  double t4503;
  double t4505;
  double t4506;
  double t4508;
  double t4509;
  double t4513;
  double t4515;
  double t4516;
  double t4521;
  double t4522;
  double t4524;
  double t4526;
  double t4528;
  double t4529;
  double t4531;
  double t4532;
  double t4533;
  double t4536;
  double t4539;
  double t4541;
  double t4544;
  double t4545;
  double t4546;
  double t4549;
  double t4550;
  double t4551;
  double t4553;
  double t4554;
  double t4555;
  double t4557;
  double t4558;
  double t4559;
  double t4571;
  double t4572;
  double t4573;
  double t4576;
  double t4577;
  double t4578;
  double t4583;
  double t4584;
  double t4586;
  double t4587;
  double t4588;
  double t4590;
  double t4591;
  double t4592;
  double t4594;
  double t4595;
  double t4596;
  double t4598;
  double t4599;
  double t4600;
  double t4602;
  double t4603;
  double t4604;
  double t4606;
  double t4607;
  double t4608;
  double t4610;
  double t4611;
  double t4612;
  double t4614;
  double t4615;
  double t4616;
  double t4629;
  double t4630;
  double t4631;
  double t4635;
  double t4636;
  double t4637;
  double t4639;
  double t4640;
  double t4641;
  double t4643;
  double t4644;
  double t4645;
  double t4647;
  double t4648;
  double t4649;
  double t4651;
  double t4652;
  double t4653;
  double t4655;
  double t4656;
  double t4657;
  double t4659;
  double t4660;
  double t4661;
  double t4663;
  double t4664;
  double t4665;
  double t4667;
  double t4668;
  double t4669;
  double t4685;
  double t4686;
  double t4688;
  double t4689;
  double t4690;
  double t4692;
  double t4693;
  double t4694;
  double t4696;
  double t4697;
  double t4698;
  double t4700;
  double t4701;
  double t4702;
  double t4704;
  double t4705;
  double t4706;
  double t4708;
  double t4709;
  double t4710;
  double t4712;
  double t4713;
  double t4714;
  double t4716;
  double t4717;
  double t4718;
  double t4730;
  double t4731;
  double t4732;
  double t4734;
  double t4735;
  double t4739;
  double t4740;
  double t4742;
  double t4743;
  double t4744;
  double t4746;
  double t4747;
  double t4748;
  double t4750;
  double t4751;
  double t4752;
  double t4754;
  double t4755;
  double t4756;
  double t4758;
  double t4759;
  double t4760;
  double t4762;
  double t4763;
  double t4764;
  double t4766;
  double t4767;
  double t4768;
  double t4770;
  double t4771;
  double t4772;
  double t4632;
  double t4633;
  double t4634;
  double t4638;
  double t4642;
  double t4646;
  double t4650;
  double t4654;
  double t4658;
  double t4662;
  double t4666;
  double t4670;
  double t4671;
  double t4672;
  double t4673;
  double t4674;
  double t4675;
  double t4676;
  double t4677;
  double t4678;
  double t4166;
  double t4169;
  double t4172;
  double t4800;
  double t4801;
  double t4802;
  double t4804;
  double t4805;
  double t4806;
  double t4808;
  double t4809;
  double t4810;
  double t4812;
  double t4813;
  double t4814;
  double t4816;
  double t4817;
  double t4818;
  double t4820;
  double t4821;
  double t4822;
  double t4786;
  double t4787;
  double t4788;
  double t4790;
  double t4791;
  double t4834;
  double t4835;
  double t4836;
  double t4838;
  double t4839;
  double t4840;
  double t4847;
  double t4848;
  double t4849;
  double t4851;
  double t4852;
  double t4853;
  double t4855;
  double t4856;
  double t4857;
  double t4859;
  double t4860;
  double t4861;
  double t4863;
  double t4864;
  double t4865;
  double t4867;
  double t4868;
  double t4869;
  double t4881;
  double t4882;
  double t4883;
  double t4885;
  double t4886;
  double t4887;
  double t4895;
  double t4896;
  double t4897;
  double t4899;
  double t4900;
  double t4901;
  double t4903;
  double t4904;
  double t4905;
  double t4907;
  double t4908;
  double t4909;
  double t4911;
  double t4912;
  double t4913;
  double t4915;
  double t4916;
  double t4917;
  double t4935;
  double t4936;
  double t4937;
  double t4940;
  double t4941;
  double t4943;
  double t4944;
  double t4945;
  double t4947;
  double t4948;
  double t4949;
  double t4951;
  double t4952;
  double t4953;
  double t4955;
  double t4956;
  double t4957;
  double t4959;
  double t4960;
  double t4961;
  double t4928;
  double t4929;
  double t4931;
  double t4932;
  double t4933;
  double t4973;
  double t4974;
  double t4975;
  double t4977;
  double t4978;
  double t4979;
  double t4981;
  double t4982;
  double t4983;
  double t4985;
  double t4986;
  double t4987;
  double t4989;
  double t4990;
  double t4991;
  double t4993;
  double t4994;
  double t4995;
  double t4997;
  double t4998;
  double t4999;
  double t5001;
  double t5002;
  double t5003;
  double t5005;
  double t5006;
  double t5007;
  double t5019;
  double t5020;
  double t5021;
  double t5023;
  double t5024;
  double t5025;
  double t5027;
  double t5028;
  double t5029;
  double t5031;
  double t5032;
  double t5033;
  double t5035;
  double t5036;
  double t5037;
  double t5039;
  double t5040;
  double t5041;
  double t5043;
  double t5044;
  double t5045;
  double t5047;
  double t5048;
  double t5049;
  double t5051;
  double t5052;
  double t5053;
  double t5072;
  double t5073;
  double t5075;
  double t5076;
  double t5077;
  double t5079;
  double t5080;
  double t5082;
  double t5083;
  double t5084;
  double t5086;
  double t5087;
  double t5088;
  double t5064;
  double t5065;
  double t5066;
  double t5068;
  double t5069;
  double t5099;
  double t5100;
  double t5101;
  double t5104;
  double t5105;
  double t5107;
  double t5108;
  double t5110;
  double t5111;
  double t5112;
  double t5114;
  double t5115;
  double t5116;
  double t5118;
  double t5119;
  double t5120;
  double t5122;
  double t5123;
  double t5124;
  double t5135;
  double t5136;
  double t5137;
  double t5140;
  double t5141;
  double t5143;
  double t5144;
  double t5146;
  double t5147;
  double t5148;
  double t5150;
  double t5151;
  double t5152;
  double t5154;
  double t5155;
  double t5156;
  double t5158;
  double t5159;
  double t5160;
  double t5178;
  double t5179;
  double t5182;
  double t5183;
  double t5185;
  double t5186;
  double t5187;
  double t5171;
  double t5172;
  double t5174;
  double t5175;
  double t5176;
  double t5199;
  double t5200;
  double t5201;
  double t5203;
  double t5204;
  double t5206;
  double t5207;
  double t5209;
  double t5210;
  double t5211;
  double t5213;
  double t5214;
  double t5215;
  double t5227;
  double t5228;
  double t5229;
  double t5231;
  double t5232;
  double t5234;
  double t5235;
  double t5237;
  double t5238;
  double t5239;
  double t5241;
  double t5242;
  double t5243;
  double t5262;
  double t5263;
  double t4264;
  double t5254;
  double t5255;
  double t5256;
  double t5258;
  double t5259;
  double t5273;
  double t5274;
  double t5275;
  double t5278;
  double t5279;
  double t5281;
  double t5282;
  double t5293;
  double t5294;
  double t5295;
  double t5298;
  double t5299;
  double t5301;
  double t5302;
  double t5265;
  double t4265;
  double t4269;
  double t5313;
  double t5314;
  double t5316;
  double t5317;
  double t5318;
  double t5284;
  double t5326;
  double t5327;
  double t5328;
  double t5288;
  double t5304;
  double t5338;
  double t5339;
  double t5340;
  double t5308;
  t3290 = Cos(var1[5]);
  t3337 = Sin(var1[3]);
  t3438 = Sin(var1[4]);
  t3217 = Cos(var1[3]);
  t3457 = Sin(var1[5]);
  t2950 = Cos(var1[6]);
  t3325 = -1.*t3217*t3290;
  t3468 = -1.*t3337*t3438*t3457;
  t3472 = t3325 + t3468;
  t3474 = -1.*t3290*t3337*t3438;
  t3480 = t3217*t3457;
  t3484 = t3474 + t3480;
  t3494 = Sin(var1[6]);
  t3649 = Cos(var1[7]);
  t3660 = -1.*t3649;
  t3662 = 1. + t3660;
  t3673 = Sin(var1[7]);
  t3610 = t2950*t3472;
  t3614 = t3484*t3494;
  t3638 = t3610 + t3614;
  t3681 = Cos(var1[4]);
  t3810 = Cos(var1[8]);
  t3826 = -1.*t3810;
  t3831 = 1. + t3826;
  t3855 = Sin(var1[8]);
  t3783 = -1.*t3681*t3649*t3337;
  t3794 = t3638*t3673;
  t3805 = t3783 + t3794;
  t3864 = t2950*t3484;
  t3866 = -1.*t3472*t3494;
  t3867 = t3864 + t3866;
  t3888 = Cos(var1[9]);
  t3905 = -1.*t3888;
  t3906 = 1. + t3905;
  t3916 = Sin(var1[9]);
  t3928 = t3810*t3805;
  t3935 = t3867*t3855;
  t3936 = t3928 + t3935;
  t3968 = t3810*t3867;
  t3972 = -1.*t3805*t3855;
  t3978 = t3968 + t3972;
  t3985 = Cos(var1[10]);
  t3988 = -1.*t3985;
  t3990 = 1. + t3988;
  t3998 = Sin(var1[10]);
  t4006 = -1.*t3916*t3936;
  t4007 = t3888*t3978;
  t4009 = t4006 + t4007;
  t4017 = t3888*t3936;
  t4018 = t3916*t3978;
  t4020 = t4017 + t4018;
  t4022 = Cos(var1[11]);
  t4024 = -1.*t4022;
  t4028 = 1. + t4024;
  t4031 = Sin(var1[11]);
  t4043 = t3998*t4009;
  t4047 = t3985*t4020;
  t4050 = t4043 + t4047;
  t4063 = t3985*t4009;
  t4070 = -1.*t3998*t4020;
  t4073 = t4063 + t4070;
  t4077 = Cos(var1[12]);
  t4078 = -1.*t4077;
  t4082 = 1. + t4078;
  t4090 = Sin(var1[12]);
  t4096 = -1.*t4031*t4050;
  t4098 = t4022*t4073;
  t4102 = t4096 + t4098;
  t4118 = t4022*t4050;
  t4119 = t4031*t4073;
  t4123 = t4118 + t4119;
  t3049 = -1.*t2950;
  t3151 = 1. + t3049;
  t3186 = 0.135*t3151;
  t3204 = 0. + t3186;
  t3541 = -0.135*t3494;
  t3570 = 0. + t3541;
  t4144 = -1.*t3290*t3337;
  t4145 = t3217*t3438*t3457;
  t4146 = t4144 + t4145;
  t4148 = t3217*t3290*t3438;
  t4149 = t3337*t3457;
  t4150 = t4148 + t4149;
  t3672 = 0.135*t3662;
  t3674 = 0.049*t3673;
  t3678 = 0. + t3672 + t3674;
  t3682 = -0.049*t3662;
  t3691 = 0.135*t3673;
  t3732 = 0. + t3682 + t3691;
  t4154 = t2950*t4146;
  t4155 = t4150*t3494;
  t4156 = t4154 + t4155;
  t3842 = -0.049*t3831;
  t3858 = -0.09*t3855;
  t3862 = 0. + t3842 + t3858;
  t3868 = -0.09*t3831;
  t3871 = 0.049*t3855;
  t3875 = 0. + t3868 + t3871;
  t3910 = -0.049*t3906;
  t3924 = -0.21*t3916;
  t3927 = 0. + t3910 + t3924;
  t4175 = t3217*t3681*t3649;
  t4178 = t4156*t3673;
  t4179 = t4175 + t4178;
  t4185 = t2950*t4150;
  t4186 = -1.*t4146*t3494;
  t4188 = t4185 + t4186;
  t3944 = -0.21*t3906;
  t3958 = 0.049*t3916;
  t3966 = 0. + t3944 + t3958;
  t3992 = -0.2707*t3990;
  t4001 = 0.0016*t3998;
  t4002 = 0. + t3992 + t4001;
  t4192 = t3810*t4179;
  t4194 = t4188*t3855;
  t4195 = t4192 + t4194;
  t4197 = t3810*t4188;
  t4199 = -1.*t4179*t3855;
  t4201 = t4197 + t4199;
  t4011 = -0.0016*t3990;
  t4013 = -0.2707*t3998;
  t4014 = 0. + t4011 + t4013;
  t4030 = 0.0184*t4028;
  t4037 = -0.7055*t4031;
  t4041 = 0. + t4030 + t4037;
  t4210 = -1.*t3916*t4195;
  t4214 = t3888*t4201;
  t4217 = t4210 + t4214;
  t4222 = t3888*t4195;
  t4228 = t3916*t4201;
  t4230 = t4222 + t4228;
  t4057 = -0.7055*t4028;
  t4058 = -0.0184*t4031;
  t4062 = 0. + t4057 + t4058;
  t4083 = -1.1135*t4082;
  t4093 = 0.0216*t4090;
  t4094 = 0. + t4083 + t4093;
  t4234 = t3998*t4217;
  t4237 = t3985*t4230;
  t4238 = t4234 + t4237;
  t4241 = t3985*t4217;
  t4242 = -1.*t3998*t4230;
  t4245 = t4241 + t4242;
  t4108 = -0.0216*t4082;
  t4110 = -1.1135*t4090;
  t4113 = 0. + t4108 + t4110;
  t4247 = -1.*t4031*t4238;
  t4248 = t4022*t4245;
  t4249 = t4247 + t4248;
  t4251 = t4022*t4238;
  t4252 = t4031*t4245;
  t4253 = t4251 + t4252;
  t4276 = t3217*t3681*t2950*t3457;
  t4277 = t3217*t3681*t3290*t3494;
  t4279 = t4276 + t4277;
  t4287 = -1.*t3217*t3649*t3438;
  t4289 = t4279*t3673;
  t4290 = t4287 + t4289;
  t4294 = t3217*t3681*t3290*t2950;
  t4295 = -1.*t3217*t3681*t3457*t3494;
  t4296 = t4294 + t4295;
  t4298 = t3810*t4290;
  t4299 = t4296*t3855;
  t4300 = t4298 + t4299;
  t4302 = t3810*t4296;
  t4303 = -1.*t4290*t3855;
  t4304 = t4302 + t4303;
  t4306 = -1.*t3916*t4300;
  t4307 = t3888*t4304;
  t4308 = t4306 + t4307;
  t4310 = t3888*t4300;
  t4312 = t3916*t4304;
  t4313 = t4310 + t4312;
  t4316 = t3998*t4308;
  t4317 = t3985*t4313;
  t4318 = t4316 + t4317;
  t4321 = t3985*t4308;
  t4322 = -1.*t3998*t4313;
  t4324 = t4321 + t4322;
  t4328 = -1.*t4031*t4318;
  t4329 = t4022*t4324;
  t4330 = t4328 + t4329;
  t4332 = t4022*t4318;
  t4333 = t4031*t4324;
  t4334 = t4332 + t4333;
  t4352 = t3681*t2950*t3337*t3457;
  t4353 = t3681*t3290*t3337*t3494;
  t4354 = t4352 + t4353;
  t4365 = -1.*t3649*t3337*t3438;
  t4366 = t4354*t3673;
  t4367 = t4365 + t4366;
  t4369 = t3681*t3290*t2950*t3337;
  t4370 = -1.*t3681*t3337*t3457*t3494;
  t4371 = t4369 + t4370;
  t4373 = t3810*t4367;
  t4374 = t4371*t3855;
  t4375 = t4373 + t4374;
  t4378 = t3810*t4371;
  t4381 = -1.*t4367*t3855;
  t4383 = t4378 + t4381;
  t4386 = -1.*t3916*t4375;
  t4387 = t3888*t4383;
  t4388 = t4386 + t4387;
  t4390 = t3888*t4375;
  t4392 = t3916*t4383;
  t4393 = t4390 + t4392;
  t4396 = t3998*t4388;
  t4397 = t3985*t4393;
  t4400 = t4396 + t4397;
  t4402 = t3985*t4388;
  t4403 = -1.*t3998*t4393;
  t4404 = t4402 + t4403;
  t4406 = -1.*t4031*t4400;
  t4407 = t4022*t4404;
  t4408 = t4406 + t4407;
  t4410 = t4022*t4400;
  t4411 = t4031*t4404;
  t4412 = t4410 + t4411;
  t4429 = -1.*t2950*t3438*t3457;
  t4430 = -1.*t3290*t3438*t3494;
  t4431 = t4429 + t4430;
  t4438 = -1.*t3681*t3649;
  t4439 = t4431*t3673;
  t4441 = t4438 + t4439;
  t4444 = -1.*t3290*t2950*t3438;
  t4447 = t3438*t3457*t3494;
  t4448 = t4444 + t4447;
  t4451 = t3810*t4441;
  t4452 = t4448*t3855;
  t4455 = t4451 + t4452;
  t4457 = t3810*t4448;
  t4458 = -1.*t4441*t3855;
  t4459 = t4457 + t4458;
  t4461 = -1.*t3916*t4455;
  t4462 = t3888*t4459;
  t4463 = t4461 + t4462;
  t4465 = t3888*t4455;
  t4466 = t3916*t4459;
  t4467 = t4465 + t4466;
  t4471 = t3998*t4463;
  t4472 = t3985*t4467;
  t4475 = t4471 + t4472;
  t4477 = t3985*t4463;
  t4479 = -1.*t3998*t4467;
  t4480 = t4477 + t4479;
  t4484 = -1.*t4031*t4475;
  t4485 = t4022*t4480;
  t4486 = t4484 + t4485;
  t4488 = t4022*t4475;
  t4489 = t4031*t4480;
  t4490 = t4488 + t4489;
  t4503 = t3290*t3337;
  t4505 = -1.*t3217*t3438*t3457;
  t4506 = t4503 + t4505;
  t4508 = t4506*t3494;
  t4509 = t4185 + t4508;
  t4513 = t2950*t4506;
  t4515 = -1.*t4150*t3494;
  t4516 = t4513 + t4515;
  t4521 = t3810*t4509*t3673;
  t4522 = t4516*t3855;
  t4524 = t4521 + t4522;
  t4526 = t3810*t4516;
  t4528 = -1.*t4509*t3673*t3855;
  t4529 = t4526 + t4528;
  t4531 = -1.*t3916*t4524;
  t4532 = t3888*t4529;
  t4533 = t4531 + t4532;
  t4536 = t3888*t4524;
  t4539 = t3916*t4529;
  t4541 = t4536 + t4539;
  t4544 = t3998*t4533;
  t4545 = t3985*t4541;
  t4546 = t4544 + t4545;
  t4549 = t3985*t4533;
  t4550 = -1.*t3998*t4541;
  t4551 = t4549 + t4550;
  t4553 = -1.*t4031*t4546;
  t4554 = t4022*t4551;
  t4555 = t4553 + t4554;
  t4557 = t4022*t4546;
  t4558 = t4031*t4551;
  t4559 = t4557 + t4558;
  t4571 = t3290*t3337*t3438;
  t4572 = -1.*t3217*t3457;
  t4573 = t4571 + t4572;
  t4576 = t2950*t4573;
  t4577 = t3472*t3494;
  t4578 = t4576 + t4577;
  t4583 = -1.*t4573*t3494;
  t4584 = t3610 + t4583;
  t4586 = t3810*t4578*t3673;
  t4587 = t4584*t3855;
  t4588 = t4586 + t4587;
  t4590 = t3810*t4584;
  t4591 = -1.*t4578*t3673*t3855;
  t4592 = t4590 + t4591;
  t4594 = -1.*t3916*t4588;
  t4595 = t3888*t4592;
  t4596 = t4594 + t4595;
  t4598 = t3888*t4588;
  t4599 = t3916*t4592;
  t4600 = t4598 + t4599;
  t4602 = t3998*t4596;
  t4603 = t3985*t4600;
  t4604 = t4602 + t4603;
  t4606 = t3985*t4596;
  t4607 = -1.*t3998*t4600;
  t4608 = t4606 + t4607;
  t4610 = -1.*t4031*t4604;
  t4611 = t4022*t4608;
  t4612 = t4610 + t4611;
  t4614 = t4022*t4604;
  t4615 = t4031*t4608;
  t4616 = t4614 + t4615;
  t4629 = t3681*t3290*t2950;
  t4630 = -1.*t3681*t3457*t3494;
  t4631 = t4629 + t4630;
  t4635 = -1.*t3681*t2950*t3457;
  t4636 = -1.*t3681*t3290*t3494;
  t4637 = t4635 + t4636;
  t4639 = t3810*t4631*t3673;
  t4640 = t4637*t3855;
  t4641 = t4639 + t4640;
  t4643 = t3810*t4637;
  t4644 = -1.*t4631*t3673*t3855;
  t4645 = t4643 + t4644;
  t4647 = -1.*t3916*t4641;
  t4648 = t3888*t4645;
  t4649 = t4647 + t4648;
  t4651 = t3888*t4641;
  t4652 = t3916*t4645;
  t4653 = t4651 + t4652;
  t4655 = t3998*t4649;
  t4656 = t3985*t4653;
  t4657 = t4655 + t4656;
  t4659 = t3985*t4649;
  t4660 = -1.*t3998*t4653;
  t4661 = t4659 + t4660;
  t4663 = -1.*t4031*t4657;
  t4664 = t4022*t4661;
  t4665 = t4663 + t4664;
  t4667 = t4022*t4657;
  t4668 = t4031*t4661;
  t4669 = t4667 + t4668;
  t4685 = -1.*t2950*t4146;
  t4686 = t4685 + t4515;
  t4688 = t3810*t4188*t3673;
  t4689 = t4686*t3855;
  t4690 = t4688 + t4689;
  t4692 = t3810*t4686;
  t4693 = -1.*t4188*t3673*t3855;
  t4694 = t4692 + t4693;
  t4696 = -1.*t3916*t4690;
  t4697 = t3888*t4694;
  t4698 = t4696 + t4697;
  t4700 = t3888*t4690;
  t4701 = t3916*t4694;
  t4702 = t4700 + t4701;
  t4704 = t3998*t4698;
  t4705 = t3985*t4702;
  t4706 = t4704 + t4705;
  t4708 = t3985*t4698;
  t4709 = -1.*t3998*t4702;
  t4710 = t4708 + t4709;
  t4712 = -1.*t4031*t4706;
  t4713 = t4022*t4710;
  t4714 = t4712 + t4713;
  t4716 = t4022*t4706;
  t4717 = t4031*t4710;
  t4718 = t4716 + t4717;
  t4730 = t3217*t3290;
  t4731 = t3337*t3438*t3457;
  t4732 = t4730 + t4731;
  t4734 = -1.*t4732*t3494;
  t4735 = t4576 + t4734;
  t4739 = -1.*t2950*t4732;
  t4740 = t4739 + t4583;
  t4742 = t3810*t4735*t3673;
  t4743 = t4740*t3855;
  t4744 = t4742 + t4743;
  t4746 = t3810*t4740;
  t4747 = -1.*t4735*t3673*t3855;
  t4748 = t4746 + t4747;
  t4750 = -1.*t3916*t4744;
  t4751 = t3888*t4748;
  t4752 = t4750 + t4751;
  t4754 = t3888*t4744;
  t4755 = t3916*t4748;
  t4756 = t4754 + t4755;
  t4758 = t3998*t4752;
  t4759 = t3985*t4756;
  t4760 = t4758 + t4759;
  t4762 = t3985*t4752;
  t4763 = -1.*t3998*t4756;
  t4764 = t4762 + t4763;
  t4766 = -1.*t4031*t4760;
  t4767 = t4022*t4764;
  t4768 = t4766 + t4767;
  t4770 = t4022*t4760;
  t4771 = t4031*t4764;
  t4772 = t4770 + t4771;
  t4632 = 0.1305*t3649*t4631;
  t4633 = t4631*t3678;
  t4634 = t4631*t3673*t3862;
  t4638 = t4637*t3875;
  t4642 = t3927*t4641;
  t4646 = t3966*t4645;
  t4650 = t4002*t4649;
  t4654 = t4014*t4653;
  t4658 = t4041*t4657;
  t4662 = t4062*t4661;
  t4666 = t4094*t4665;
  t4670 = t4113*t4669;
  t4671 = t4090*t4665;
  t4672 = t4077*t4669;
  t4673 = t4671 + t4672;
  t4674 = -0.0216*t4673;
  t4675 = t4077*t4665;
  t4676 = -1.*t4090*t4669;
  t4677 = t4675 + t4676;
  t4678 = -1.1135*t4677;
  t4166 = t3649*t4156;
  t4169 = -1.*t3217*t3681*t3673;
  t4172 = t4166 + t4169;
  t4800 = -1.*t3810*t3916*t4172;
  t4801 = -1.*t3888*t4172*t3855;
  t4802 = t4800 + t4801;
  t4804 = t3888*t3810*t4172;
  t4805 = -1.*t3916*t4172*t3855;
  t4806 = t4804 + t4805;
  t4808 = t3998*t4802;
  t4809 = t3985*t4806;
  t4810 = t4808 + t4809;
  t4812 = t3985*t4802;
  t4813 = -1.*t3998*t4806;
  t4814 = t4812 + t4813;
  t4816 = -1.*t4031*t4810;
  t4817 = t4022*t4814;
  t4818 = t4816 + t4817;
  t4820 = t4022*t4810;
  t4821 = t4031*t4814;
  t4822 = t4820 + t4821;
  t4786 = 0.135*t3649;
  t4787 = -0.049*t3673;
  t4788 = t4786 + t4787;
  t4790 = 0.049*t3649;
  t4791 = t4790 + t3691;
  t4834 = t2950*t4732;
  t4835 = t4573*t3494;
  t4836 = t4834 + t4835;
  t4838 = t3649*t4836;
  t4839 = -1.*t3681*t3337*t3673;
  t4840 = t4838 + t4839;
  t4847 = -1.*t3810*t3916*t4840;
  t4848 = -1.*t3888*t4840*t3855;
  t4849 = t4847 + t4848;
  t4851 = t3888*t3810*t4840;
  t4852 = -1.*t3916*t4840*t3855;
  t4853 = t4851 + t4852;
  t4855 = t3998*t4849;
  t4856 = t3985*t4853;
  t4857 = t4855 + t4856;
  t4859 = t3985*t4849;
  t4860 = -1.*t3998*t4853;
  t4861 = t4859 + t4860;
  t4863 = -1.*t4031*t4857;
  t4864 = t4022*t4861;
  t4865 = t4863 + t4864;
  t4867 = t4022*t4857;
  t4868 = t4031*t4861;
  t4869 = t4867 + t4868;
  t4881 = t3681*t2950*t3457;
  t4882 = t3681*t3290*t3494;
  t4883 = t4881 + t4882;
  t4885 = t3649*t4883;
  t4886 = t3438*t3673;
  t4887 = t4885 + t4886;
  t4895 = -1.*t3810*t3916*t4887;
  t4896 = -1.*t3888*t4887*t3855;
  t4897 = t4895 + t4896;
  t4899 = t3888*t3810*t4887;
  t4900 = -1.*t3916*t4887*t3855;
  t4901 = t4899 + t4900;
  t4903 = t3998*t4897;
  t4904 = t3985*t4901;
  t4905 = t4903 + t4904;
  t4907 = t3985*t4897;
  t4908 = -1.*t3998*t4901;
  t4909 = t4907 + t4908;
  t4911 = -1.*t4031*t4905;
  t4912 = t4022*t4909;
  t4913 = t4911 + t4912;
  t4915 = t4022*t4905;
  t4916 = t4031*t4909;
  t4917 = t4915 + t4916;
  t4935 = -1.*t3810*t4179;
  t4936 = -1.*t4188*t3855;
  t4937 = t4935 + t4936;
  t4940 = t3916*t4937;
  t4941 = t4940 + t4214;
  t4943 = t3888*t4937;
  t4944 = -1.*t3916*t4201;
  t4945 = t4943 + t4944;
  t4947 = -1.*t3998*t4941;
  t4948 = t3985*t4945;
  t4949 = t4947 + t4948;
  t4951 = t3985*t4941;
  t4952 = t3998*t4945;
  t4953 = t4951 + t4952;
  t4955 = t4031*t4949;
  t4956 = t4022*t4953;
  t4957 = t4955 + t4956;
  t4959 = t4022*t4949;
  t4960 = -1.*t4031*t4953;
  t4961 = t4959 + t4960;
  t4928 = 0.049*t3810;
  t4929 = t4928 + t3858;
  t4931 = -0.09*t3810;
  t4932 = -0.049*t3855;
  t4933 = t4931 + t4932;
  t4973 = t3681*t3649*t3337;
  t4974 = t4836*t3673;
  t4975 = t4973 + t4974;
  t4977 = -1.*t3810*t4975;
  t4978 = -1.*t4735*t3855;
  t4979 = t4977 + t4978;
  t4981 = t3810*t4735;
  t4982 = -1.*t4975*t3855;
  t4983 = t4981 + t4982;
  t4985 = t3916*t4979;
  t4986 = t3888*t4983;
  t4987 = t4985 + t4986;
  t4989 = t3888*t4979;
  t4990 = -1.*t3916*t4983;
  t4991 = t4989 + t4990;
  t4993 = -1.*t3998*t4987;
  t4994 = t3985*t4991;
  t4995 = t4993 + t4994;
  t4997 = t3985*t4987;
  t4998 = t3998*t4991;
  t4999 = t4997 + t4998;
  t5001 = t4031*t4995;
  t5002 = t4022*t4999;
  t5003 = t5001 + t5002;
  t5005 = t4022*t4995;
  t5006 = -1.*t4031*t4999;
  t5007 = t5005 + t5006;
  t5019 = -1.*t3649*t3438;
  t5020 = t4883*t3673;
  t5021 = t5019 + t5020;
  t5023 = -1.*t3810*t5021;
  t5024 = -1.*t4631*t3855;
  t5025 = t5023 + t5024;
  t5027 = t3810*t4631;
  t5028 = -1.*t5021*t3855;
  t5029 = t5027 + t5028;
  t5031 = t3916*t5025;
  t5032 = t3888*t5029;
  t5033 = t5031 + t5032;
  t5035 = t3888*t5025;
  t5036 = -1.*t3916*t5029;
  t5037 = t5035 + t5036;
  t5039 = -1.*t3998*t5033;
  t5040 = t3985*t5037;
  t5041 = t5039 + t5040;
  t5043 = t3985*t5033;
  t5044 = t3998*t5037;
  t5045 = t5043 + t5044;
  t5047 = t4031*t5041;
  t5048 = t4022*t5045;
  t5049 = t5047 + t5048;
  t5051 = t4022*t5041;
  t5052 = -1.*t4031*t5045;
  t5053 = t5051 + t5052;
  t5072 = -1.*t3888*t4195;
  t5073 = t5072 + t4944;
  t5075 = -1.*t3998*t4217;
  t5076 = t3985*t5073;
  t5077 = t5075 + t5076;
  t5079 = t3998*t5073;
  t5080 = t4241 + t5079;
  t5082 = t4031*t5077;
  t5083 = t4022*t5080;
  t5084 = t5082 + t5083;
  t5086 = t4022*t5077;
  t5087 = -1.*t4031*t5080;
  t5088 = t5086 + t5087;
  t5064 = -0.21*t3888;
  t5065 = -0.049*t3916;
  t5066 = t5064 + t5065;
  t5068 = 0.049*t3888;
  t5069 = t5068 + t3924;
  t5099 = t3810*t4975;
  t5100 = t4735*t3855;
  t5101 = t5099 + t5100;
  t5104 = -1.*t3916*t5101;
  t5105 = t5104 + t4986;
  t5107 = -1.*t3888*t5101;
  t5108 = t5107 + t4990;
  t5110 = -1.*t3998*t5105;
  t5111 = t3985*t5108;
  t5112 = t5110 + t5111;
  t5114 = t3985*t5105;
  t5115 = t3998*t5108;
  t5116 = t5114 + t5115;
  t5118 = t4031*t5112;
  t5119 = t4022*t5116;
  t5120 = t5118 + t5119;
  t5122 = t4022*t5112;
  t5123 = -1.*t4031*t5116;
  t5124 = t5122 + t5123;
  t5135 = t3810*t5021;
  t5136 = t4631*t3855;
  t5137 = t5135 + t5136;
  t5140 = -1.*t3916*t5137;
  t5141 = t5140 + t5032;
  t5143 = -1.*t3888*t5137;
  t5144 = t5143 + t5036;
  t5146 = -1.*t3998*t5141;
  t5147 = t3985*t5144;
  t5148 = t5146 + t5147;
  t5150 = t3985*t5141;
  t5151 = t3998*t5144;
  t5152 = t5150 + t5151;
  t5154 = t4031*t5148;
  t5155 = t4022*t5152;
  t5156 = t5154 + t5155;
  t5158 = t4022*t5148;
  t5159 = -1.*t4031*t5152;
  t5160 = t5158 + t5159;
  t5178 = -1.*t3985*t4230;
  t5179 = t5075 + t5178;
  t5182 = t4031*t5179;
  t5183 = t5182 + t4248;
  t5185 = t4022*t5179;
  t5186 = -1.*t4031*t4245;
  t5187 = t5185 + t5186;
  t5171 = 0.0016*t3985;
  t5172 = t5171 + t4013;
  t5174 = -0.2707*t3985;
  t5175 = -0.0016*t3998;
  t5176 = t5174 + t5175;
  t5199 = t3888*t5101;
  t5200 = t3916*t4983;
  t5201 = t5199 + t5200;
  t5203 = -1.*t3985*t5201;
  t5204 = t5110 + t5203;
  t5206 = -1.*t3998*t5201;
  t5207 = t5114 + t5206;
  t5209 = t4031*t5204;
  t5210 = t4022*t5207;
  t5211 = t5209 + t5210;
  t5213 = t4022*t5204;
  t5214 = -1.*t4031*t5207;
  t5215 = t5213 + t5214;
  t5227 = t3888*t5137;
  t5228 = t3916*t5029;
  t5229 = t5227 + t5228;
  t5231 = -1.*t3985*t5229;
  t5232 = t5146 + t5231;
  t5234 = -1.*t3998*t5229;
  t5235 = t5150 + t5234;
  t5237 = t4031*t5232;
  t5238 = t4022*t5235;
  t5239 = t5237 + t5238;
  t5241 = t4022*t5232;
  t5242 = -1.*t4031*t5235;
  t5243 = t5241 + t5242;
  t5262 = -1.*t4022*t4238;
  t5263 = t5262 + t5186;
  t4264 = t4077*t4249;
  t5254 = -0.7055*t4022;
  t5255 = 0.0184*t4031;
  t5256 = t5254 + t5255;
  t5258 = -0.0184*t4022;
  t5259 = t5258 + t4037;
  t5273 = t3998*t5105;
  t5274 = t3985*t5201;
  t5275 = t5273 + t5274;
  t5278 = -1.*t4031*t5275;
  t5279 = t5278 + t5210;
  t5281 = -1.*t4022*t5275;
  t5282 = t5281 + t5214;
  t5293 = t3998*t5141;
  t5294 = t3985*t5229;
  t5295 = t5293 + t5294;
  t5298 = -1.*t4031*t5295;
  t5299 = t5298 + t5238;
  t5301 = -1.*t4022*t5295;
  t5302 = t5301 + t5242;
  t5265 = -1.*t4090*t4249;
  t4265 = -1.*t4090*t4253;
  t4269 = t4264 + t4265;
  t5313 = 0.0216*t4077;
  t5314 = t5313 + t4110;
  t5316 = -1.1135*t4077;
  t5317 = -0.0216*t4090;
  t5318 = t5316 + t5317;
  t5284 = -1.*t4090*t5279;
  t5326 = t4022*t5275;
  t5327 = t4031*t5207;
  t5328 = t5326 + t5327;
  t5288 = t4077*t5279;
  t5304 = -1.*t4090*t5299;
  t5338 = t4022*t5295;
  t5339 = t4031*t5235;
  t5340 = t5338 + t5339;
  t5308 = t4077*t5299;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t3204*t3472 + t3484*t3570 + t3638*t3678 + 0.1305*(t3638*t3649 + t3337*t3673*t3681) - 1.*t3337*t3681*t3732 + t3805*t3862 + t3867*t3875 + t3927*t3936 + t3966*t3978 + t4002*t4009 + t4014*t4020 + t4041*t4050 + t4062*t4073 + t4094*t4102 + t4113*t4123 - 0.0216*(t4090*t4102 + t4077*t4123) - 1.1135*(t4077*t4102 - 1.*t4090*t4123);
  p_output1[10]=t3217*t3681*t3732 + t3204*t4146 + t3570*t4150 + t3678*t4156 + 0.1305*t4172 + t3862*t4179 + t3875*t4188 + t3927*t4195 + t3966*t4201 + t4002*t4217 + t4014*t4230 + t4041*t4238 + t4062*t4245 + t4094*t4249 + t4113*t4253 - 0.0216*(t4090*t4249 + t4077*t4253) - 1.1135*t4269;
  p_output1[11]=0;
  p_output1[12]=t3204*t3217*t3457*t3681 + t3217*t3290*t3570*t3681 - 1.*t3217*t3438*t3732 + t3678*t4279 + 0.1305*(t3217*t3438*t3673 + t3649*t4279) + t3862*t4290 + t3875*t4296 + t3927*t4300 + t3966*t4304 + t4002*t4308 + t4014*t4313 + t4041*t4318 + t4062*t4324 + t4094*t4330 + t4113*t4334 - 0.0216*(t4090*t4330 + t4077*t4334) - 1.1135*(t4077*t4330 - 1.*t4090*t4334);
  p_output1[13]=t3204*t3337*t3457*t3681 + t3290*t3337*t3570*t3681 - 1.*t3337*t3438*t3732 + t3678*t4354 + 0.1305*(t3337*t3438*t3673 + t3649*t4354) + t3862*t4367 + t3875*t4371 + t3927*t4375 + t3966*t4383 + t4002*t4388 + t4014*t4393 + t4041*t4400 + t4062*t4404 + t4094*t4408 + t4113*t4412 - 0.0216*(t4090*t4408 + t4077*t4412) - 1.1135*(t4077*t4408 - 1.*t4090*t4412);
  p_output1[14]=-1.*t3204*t3438*t3457 - 1.*t3290*t3438*t3570 - 1.*t3681*t3732 + t3678*t4431 + 0.1305*(t3673*t3681 + t3649*t4431) + t3862*t4441 + t3875*t4448 + t3927*t4455 + t3966*t4459 + t4002*t4463 + t4014*t4467 + t4041*t4475 + t4062*t4480 + t4094*t4486 + t4113*t4490 - 0.0216*(t4090*t4486 + t4077*t4490) - 1.1135*(t4077*t4486 - 1.*t4090*t4490);
  p_output1[15]=t3204*t4150 + t3570*t4506 + 0.1305*t3649*t4509 + t3678*t4509 + t3673*t3862*t4509 + t3875*t4516 + t3927*t4524 + t3966*t4529 + t4002*t4533 + t4014*t4541 + t4041*t4546 + t4062*t4551 + t4094*t4555 + t4113*t4559 - 0.0216*(t4090*t4555 + t4077*t4559) - 1.1135*(t4077*t4555 - 1.*t4090*t4559);
  p_output1[16]=t3472*t3570 + t3204*t4573 + 0.1305*t3649*t4578 + t3678*t4578 + t3673*t3862*t4578 + t3875*t4584 + t3927*t4588 + t3966*t4592 + t4002*t4596 + t4014*t4600 + t4041*t4604 + t4062*t4608 + t4094*t4612 + t4113*t4616 - 0.0216*(t4090*t4612 + t4077*t4616) - 1.1135*(t4077*t4612 - 1.*t4090*t4616);
  p_output1[17]=t3204*t3290*t3681 - 1.*t3457*t3570*t3681 + t4632 + t4633 + t4634 + t4638 + t4642 + t4646 + t4650 + t4654 + t4658 + t4662 + t4666 + t4670 + t4674 + t4678;
  p_output1[18]=0.135*t3494*t4146 - 0.135*t2950*t4150 + 0.1305*t3649*t4188 + t3678*t4188 + t3673*t3862*t4188 + t3875*t4686 + t3927*t4690 + t3966*t4694 + t4002*t4698 + t4014*t4702 + t4041*t4706 + t4062*t4710 + t4094*t4714 + t4113*t4718 - 0.0216*(t4090*t4714 + t4077*t4718) - 1.1135*(t4077*t4714 - 1.*t4090*t4718);
  p_output1[19]=-0.135*t2950*t4573 + 0.135*t3494*t4732 + 0.1305*t3649*t4735 + t3678*t4735 + t3673*t3862*t4735 + t3875*t4740 + t3927*t4744 + t3966*t4748 + t4002*t4752 + t4014*t4756 + t4041*t4760 + t4062*t4764 + t4094*t4768 + t4113*t4772 - 0.0216*(t4090*t4768 + t4077*t4772) - 1.1135*(t4077*t4768 - 1.*t4090*t4772);
  p_output1[20]=-0.135*t2950*t3290*t3681 + 0.135*t3457*t3494*t3681 + t4632 + t4633 + t4634 + t4638 + t4642 + t4646 + t4650 + t4654 + t4658 + t4662 + t4666 + t4670 + t4674 + t4678;
  p_output1[21]=0.1305*(-1.*t3217*t3649*t3681 - 1.*t3673*t4156) + t3862*t4172 + t3810*t3927*t4172 - 1.*t3855*t3966*t4172 + t3217*t3681*t4788 + t4156*t4791 + t4002*t4802 + t4014*t4806 + t4041*t4810 + t4062*t4814 + t4094*t4818 + t4113*t4822 - 0.0216*(t4090*t4818 + t4077*t4822) - 1.1135*(t4077*t4818 - 1.*t4090*t4822);
  p_output1[22]=t3337*t3681*t4788 + t4791*t4836 + 0.1305*(t3783 - 1.*t3673*t4836) + t3862*t4840 + t3810*t3927*t4840 - 1.*t3855*t3966*t4840 + t4002*t4849 + t4014*t4853 + t4041*t4857 + t4062*t4861 + t4094*t4865 + t4113*t4869 - 0.0216*(t4090*t4865 + t4077*t4869) - 1.1135*(t4077*t4865 - 1.*t4090*t4869);
  p_output1[23]=-1.*t3438*t4788 + t4791*t4883 + 0.1305*(t3438*t3649 - 1.*t3673*t4883) + t3862*t4887 + t3810*t3927*t4887 - 1.*t3855*t3966*t4887 + t4002*t4897 + t4014*t4901 + t4041*t4905 + t4062*t4909 + t4094*t4913 + t4113*t4917 - 0.0216*(t4090*t4913 + t4077*t4917) - 1.1135*(t4077*t4913 - 1.*t4090*t4917);
  p_output1[24]=t3927*t4201 + t4188*t4929 + t4179*t4933 + t3966*t4937 + t4014*t4941 + t4002*t4945 + t4062*t4949 + t4041*t4953 + t4113*t4957 + t4094*t4961 - 1.1135*(-1.*t4090*t4957 + t4077*t4961) - 0.0216*(t4077*t4957 + t4090*t4961);
  p_output1[25]=t4735*t4929 + t4933*t4975 + t3966*t4979 + t3927*t4983 + t4014*t4987 + t4002*t4991 + t4062*t4995 + t4041*t4999 + t4113*t5003 + t4094*t5007 - 1.1135*(-1.*t4090*t5003 + t4077*t5007) - 0.0216*(t4077*t5003 + t4090*t5007);
  p_output1[26]=t4631*t4929 + t4933*t5021 + t3966*t5025 + t3927*t5029 + t4014*t5033 + t4002*t5037 + t4062*t5041 + t4041*t5045 + t4113*t5049 + t4094*t5053 - 1.1135*(-1.*t4090*t5049 + t4077*t5053) - 0.0216*(t4077*t5049 + t4090*t5053);
  p_output1[27]=t4014*t4217 + t4195*t5066 + t4201*t5069 + t4002*t5073 + t4062*t5077 + t4041*t5080 + t4113*t5084 + t4094*t5088 - 1.1135*(-1.*t4090*t5084 + t4077*t5088) - 0.0216*(t4077*t5084 + t4090*t5088);
  p_output1[28]=t4983*t5069 + t5066*t5101 + t4014*t5105 + t4002*t5108 + t4062*t5112 + t4041*t5116 + t4113*t5120 + t4094*t5124 - 1.1135*(-1.*t4090*t5120 + t4077*t5124) - 0.0216*(t4077*t5120 + t4090*t5124);
  p_output1[29]=t5029*t5069 + t5066*t5137 + t4014*t5141 + t4002*t5144 + t4062*t5148 + t4041*t5152 + t4113*t5156 + t4094*t5160 - 1.1135*(-1.*t4090*t5156 + t4077*t5160) - 0.0216*(t4077*t5156 + t4090*t5160);
  p_output1[30]=t4041*t4245 + t4217*t5172 + t4230*t5176 + t4062*t5179 + t4113*t5183 + t4094*t5187 - 1.1135*(-1.*t4090*t5183 + t4077*t5187) - 0.0216*(t4077*t5183 + t4090*t5187);
  p_output1[31]=t5105*t5172 + t5176*t5201 + t4062*t5204 + t4041*t5207 + t4113*t5211 + t4094*t5215 - 1.1135*(-1.*t4090*t5211 + t4077*t5215) - 0.0216*(t4077*t5211 + t4090*t5215);
  p_output1[32]=t5141*t5172 + t5176*t5229 + t4062*t5232 + t4041*t5235 + t4113*t5239 + t4094*t5243 - 1.1135*(-1.*t4090*t5239 + t4077*t5243) - 0.0216*(t4077*t5239 + t4090*t5243);
  p_output1[33]=t4113*t4249 + t4238*t5256 + t4245*t5259 + t4094*t5263 - 0.0216*(t4264 + t4090*t5263) - 1.1135*(t4077*t5263 + t5265);
  p_output1[34]=t5207*t5259 + t5256*t5275 + t4113*t5279 + t4094*t5282 - 1.1135*(t4077*t5282 + t5284) - 0.0216*(t4090*t5282 + t5288);
  p_output1[35]=t5235*t5259 + t5256*t5295 + t4113*t5299 + t4094*t5302 - 1.1135*(t4077*t5302 + t5304) - 0.0216*(t4090*t5302 + t5308);
  p_output1[36]=-0.0216*t4269 - 1.1135*(-1.*t4077*t4253 + t5265) + t4249*t5314 + t4253*t5318;
  p_output1[37]=t5279*t5314 + t5318*t5328 - 1.1135*(t5284 - 1.*t4077*t5328) - 0.0216*(t5288 - 1.*t4090*t5328);
  p_output1[38]=t5299*t5314 + t5318*t5340 - 1.1135*(t5304 - 1.*t4077*t5340) - 0.0216*(t5308 - 1.*t4090*t5340);
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_LeftToeJoint_mex.hh"

namespace SymExpression
{

void J_LeftToeJoint_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
