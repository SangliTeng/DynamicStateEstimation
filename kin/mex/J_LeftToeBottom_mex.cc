/*
 * Automatically Generated from Mathematica.
 * Mon 25 Jun 2018 14:53:20 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1576;
  double t1595;
  double t1616;
  double t1555;
  double t1621;
  double t1481;
  double t1587;
  double t1625;
  double t1627;
  double t1629;
  double t1630;
  double t1631;
  double t1635;
  double t1691;
  double t1696;
  double t1697;
  double t1701;
  double t1675;
  double t1676;
  double t1685;
  double t1705;
  double t1751;
  double t1759;
  double t1760;
  double t1771;
  double t1738;
  double t1745;
  double t1750;
  double t1777;
  double t1778;
  double t1779;
  double t1790;
  double t1794;
  double t1795;
  double t1798;
  double t1804;
  double t1806;
  double t1807;
  double t1826;
  double t1830;
  double t1834;
  double t1837;
  double t1838;
  double t1840;
  double t1845;
  double t1849;
  double t1850;
  double t1851;
  double t1856;
  double t1857;
  double t1859;
  double t1861;
  double t1862;
  double t1864;
  double t1866;
  double t1872;
  double t1873;
  double t1875;
  double t1882;
  double t1885;
  double t1887;
  double t1890;
  double t1891;
  double t1894;
  double t1898;
  double t1903;
  double t1905;
  double t1907;
  double t1915;
  double t1916;
  double t1918;
  double t1512;
  double t1541;
  double t1550;
  double t1552;
  double t1651;
  double t1662;
  double t1931;
  double t1932;
  double t1933;
  double t1935;
  double t1936;
  double t1937;
  double t1700;
  double t1702;
  double t1703;
  double t1706;
  double t1710;
  double t1723;
  double t1939;
  double t1940;
  double t1941;
  double t1766;
  double t1772;
  double t1775;
  double t1780;
  double t1781;
  double t1782;
  double t1797;
  double t1802;
  double t1803;
  double t1950;
  double t1952;
  double t1953;
  double t1956;
  double t1957;
  double t1959;
  double t1813;
  double t1820;
  double t1825;
  double t1841;
  double t1846;
  double t1847;
  double t1962;
  double t1963;
  double t1964;
  double t1966;
  double t1968;
  double t1969;
  double t1853;
  double t1854;
  double t1855;
  double t1865;
  double t1869;
  double t1870;
  double t1972;
  double t1973;
  double t1975;
  double t1978;
  double t1980;
  double t1981;
  double t1878;
  double t1879;
  double t1881;
  double t1895;
  double t1900;
  double t1901;
  double t1984;
  double t1985;
  double t1986;
  double t1988;
  double t1989;
  double t1990;
  double t1910;
  double t1912;
  double t1913;
  double t1992;
  double t1993;
  double t1994;
  double t1996;
  double t1997;
  double t1998;
  double t2012;
  double t2013;
  double t2014;
  double t2021;
  double t2022;
  double t2023;
  double t2025;
  double t2026;
  double t2027;
  double t2029;
  double t2030;
  double t2031;
  double t2033;
  double t2034;
  double t2035;
  double t2037;
  double t2038;
  double t2039;
  double t2041;
  double t2042;
  double t2043;
  double t2045;
  double t2046;
  double t2047;
  double t2049;
  double t2050;
  double t2051;
  double t2053;
  double t2054;
  double t2055;
  double t2057;
  double t2058;
  double t2059;
  double t2072;
  double t2073;
  double t2074;
  double t2081;
  double t2082;
  double t2083;
  double t2085;
  double t2086;
  double t2087;
  double t2089;
  double t2090;
  double t2091;
  double t2093;
  double t2094;
  double t2095;
  double t2097;
  double t2098;
  double t2099;
  double t2101;
  double t2102;
  double t2103;
  double t2105;
  double t2106;
  double t2107;
  double t2109;
  double t2110;
  double t2111;
  double t2113;
  double t2114;
  double t2115;
  double t2117;
  double t2118;
  double t2119;
  double t2132;
  double t2133;
  double t2134;
  double t2141;
  double t2142;
  double t2143;
  double t2145;
  double t2146;
  double t2147;
  double t2149;
  double t2150;
  double t2151;
  double t2153;
  double t2154;
  double t2155;
  double t2157;
  double t2158;
  double t2159;
  double t2161;
  double t2162;
  double t2163;
  double t2165;
  double t2166;
  double t2167;
  double t2169;
  double t2170;
  double t2171;
  double t2173;
  double t2174;
  double t2175;
  double t2177;
  double t2178;
  double t2179;
  double t2191;
  double t2192;
  double t2193;
  double t2195;
  double t2196;
  double t2200;
  double t2201;
  double t2202;
  double t2204;
  double t2205;
  double t2206;
  double t2208;
  double t2209;
  double t2210;
  double t2212;
  double t2213;
  double t2214;
  double t2216;
  double t2217;
  double t2218;
  double t2220;
  double t2221;
  double t2222;
  double t2224;
  double t2225;
  double t2226;
  double t2228;
  double t2229;
  double t2230;
  double t2232;
  double t2233;
  double t2234;
  double t2245;
  double t2246;
  double t2247;
  double t2250;
  double t2251;
  double t2252;
  double t2256;
  double t2257;
  double t2259;
  double t2260;
  double t2261;
  double t2263;
  double t2264;
  double t2265;
  double t2267;
  double t2268;
  double t2269;
  double t2271;
  double t2272;
  double t2273;
  double t2275;
  double t2276;
  double t2277;
  double t2279;
  double t2280;
  double t2281;
  double t2283;
  double t2284;
  double t2285;
  double t2287;
  double t2288;
  double t2289;
  double t2302;
  double t2303;
  double t2304;
  double t2308;
  double t2309;
  double t2310;
  double t2312;
  double t2313;
  double t2314;
  double t2316;
  double t2317;
  double t2318;
  double t2320;
  double t2321;
  double t2322;
  double t2324;
  double t2325;
  double t2326;
  double t2328;
  double t2329;
  double t2330;
  double t2332;
  double t2333;
  double t2334;
  double t2336;
  double t2337;
  double t2338;
  double t2340;
  double t2341;
  double t2342;
  double t2358;
  double t2359;
  double t2361;
  double t2362;
  double t2363;
  double t2365;
  double t2366;
  double t2367;
  double t2369;
  double t2370;
  double t2371;
  double t2373;
  double t2374;
  double t2375;
  double t2377;
  double t2378;
  double t2379;
  double t2381;
  double t2382;
  double t2383;
  double t2385;
  double t2386;
  double t2387;
  double t2389;
  double t2390;
  double t2391;
  double t2403;
  double t2404;
  double t2405;
  double t2407;
  double t2408;
  double t2412;
  double t2413;
  double t2415;
  double t2416;
  double t2417;
  double t2419;
  double t2420;
  double t2421;
  double t2423;
  double t2424;
  double t2425;
  double t2427;
  double t2428;
  double t2429;
  double t2431;
  double t2432;
  double t2433;
  double t2435;
  double t2436;
  double t2437;
  double t2439;
  double t2440;
  double t2441;
  double t2443;
  double t2444;
  double t2445;
  double t2305;
  double t2306;
  double t2307;
  double t2311;
  double t2315;
  double t2319;
  double t2323;
  double t2327;
  double t2331;
  double t2335;
  double t2339;
  double t2343;
  double t2344;
  double t2345;
  double t2346;
  double t2347;
  double t2348;
  double t2349;
  double t2350;
  double t2351;
  double t1945;
  double t1946;
  double t1947;
  double t2473;
  double t2474;
  double t2475;
  double t2477;
  double t2478;
  double t2479;
  double t2481;
  double t2482;
  double t2483;
  double t2485;
  double t2486;
  double t2487;
  double t2489;
  double t2490;
  double t2491;
  double t2493;
  double t2494;
  double t2495;
  double t2459;
  double t2460;
  double t2461;
  double t2463;
  double t2464;
  double t2507;
  double t2508;
  double t2509;
  double t2511;
  double t2512;
  double t2513;
  double t2520;
  double t2521;
  double t2522;
  double t2524;
  double t2525;
  double t2526;
  double t2528;
  double t2529;
  double t2530;
  double t2532;
  double t2533;
  double t2534;
  double t2536;
  double t2537;
  double t2538;
  double t2540;
  double t2541;
  double t2542;
  double t2554;
  double t2555;
  double t2556;
  double t2558;
  double t2559;
  double t2560;
  double t2568;
  double t2569;
  double t2570;
  double t2572;
  double t2573;
  double t2574;
  double t2576;
  double t2577;
  double t2578;
  double t2580;
  double t2581;
  double t2582;
  double t2584;
  double t2585;
  double t2586;
  double t2588;
  double t2589;
  double t2590;
  double t2608;
  double t2609;
  double t2610;
  double t2613;
  double t2614;
  double t2616;
  double t2617;
  double t2618;
  double t2620;
  double t2621;
  double t2622;
  double t2624;
  double t2625;
  double t2626;
  double t2628;
  double t2629;
  double t2630;
  double t2632;
  double t2633;
  double t2634;
  double t2601;
  double t2602;
  double t2604;
  double t2605;
  double t2606;
  double t2646;
  double t2647;
  double t2648;
  double t2650;
  double t2651;
  double t2652;
  double t2654;
  double t2655;
  double t2656;
  double t2658;
  double t2659;
  double t2660;
  double t2662;
  double t2663;
  double t2664;
  double t2666;
  double t2667;
  double t2668;
  double t2670;
  double t2671;
  double t2672;
  double t2674;
  double t2675;
  double t2676;
  double t2678;
  double t2679;
  double t2680;
  double t2692;
  double t2693;
  double t2694;
  double t2696;
  double t2697;
  double t2698;
  double t2700;
  double t2701;
  double t2702;
  double t2704;
  double t2705;
  double t2706;
  double t2708;
  double t2709;
  double t2710;
  double t2712;
  double t2713;
  double t2714;
  double t2716;
  double t2717;
  double t2718;
  double t2720;
  double t2721;
  double t2722;
  double t2724;
  double t2725;
  double t2726;
  double t2745;
  double t2746;
  double t2748;
  double t2749;
  double t2750;
  double t2752;
  double t2753;
  double t2755;
  double t2756;
  double t2757;
  double t2759;
  double t2760;
  double t2761;
  double t2737;
  double t2738;
  double t2739;
  double t2741;
  double t2742;
  double t2772;
  double t2773;
  double t2774;
  double t2777;
  double t2778;
  double t2780;
  double t2781;
  double t2783;
  double t2784;
  double t2785;
  double t2787;
  double t2788;
  double t2789;
  double t2791;
  double t2792;
  double t2793;
  double t2795;
  double t2796;
  double t2797;
  double t2808;
  double t2809;
  double t2810;
  double t2813;
  double t2814;
  double t2816;
  double t2817;
  double t2819;
  double t2820;
  double t2821;
  double t2823;
  double t2824;
  double t2825;
  double t2827;
  double t2828;
  double t2829;
  double t2831;
  double t2832;
  double t2833;
  double t2851;
  double t2852;
  double t2855;
  double t2856;
  double t2858;
  double t2859;
  double t2860;
  double t2844;
  double t2845;
  double t2847;
  double t2848;
  double t2849;
  double t2872;
  double t2873;
  double t2874;
  double t2876;
  double t2877;
  double t2879;
  double t2880;
  double t2882;
  double t2883;
  double t2884;
  double t2886;
  double t2887;
  double t2888;
  double t2900;
  double t2901;
  double t2902;
  double t2904;
  double t2905;
  double t2907;
  double t2908;
  double t2910;
  double t2911;
  double t2912;
  double t2914;
  double t2915;
  double t2916;
  double t2935;
  double t2936;
  double t2005;
  double t2927;
  double t2928;
  double t2929;
  double t2931;
  double t2932;
  double t2946;
  double t2947;
  double t2948;
  double t2951;
  double t2952;
  double t2954;
  double t2955;
  double t2966;
  double t2967;
  double t2968;
  double t2971;
  double t2972;
  double t2974;
  double t2975;
  double t2938;
  double t2006;
  double t2007;
  double t2986;
  double t2987;
  double t2989;
  double t2990;
  double t2991;
  double t2957;
  double t2999;
  double t3000;
  double t3001;
  double t2961;
  double t2977;
  double t3011;
  double t3012;
  double t3013;
  double t2981;
  t1576 = Cos(var1[5]);
  t1595 = Sin(var1[3]);
  t1616 = Sin(var1[4]);
  t1555 = Cos(var1[3]);
  t1621 = Sin(var1[5]);
  t1481 = Cos(var1[6]);
  t1587 = -1.*t1555*t1576;
  t1625 = -1.*t1595*t1616*t1621;
  t1627 = t1587 + t1625;
  t1629 = -1.*t1576*t1595*t1616;
  t1630 = t1555*t1621;
  t1631 = t1629 + t1630;
  t1635 = Sin(var1[6]);
  t1691 = Cos(var1[7]);
  t1696 = -1.*t1691;
  t1697 = 1. + t1696;
  t1701 = Sin(var1[7]);
  t1675 = t1481*t1627;
  t1676 = t1631*t1635;
  t1685 = t1675 + t1676;
  t1705 = Cos(var1[4]);
  t1751 = Cos(var1[8]);
  t1759 = -1.*t1751;
  t1760 = 1. + t1759;
  t1771 = Sin(var1[8]);
  t1738 = -1.*t1705*t1691*t1595;
  t1745 = t1685*t1701;
  t1750 = t1738 + t1745;
  t1777 = t1481*t1631;
  t1778 = -1.*t1627*t1635;
  t1779 = t1777 + t1778;
  t1790 = Cos(var1[9]);
  t1794 = -1.*t1790;
  t1795 = 1. + t1794;
  t1798 = Sin(var1[9]);
  t1804 = t1751*t1750;
  t1806 = t1779*t1771;
  t1807 = t1804 + t1806;
  t1826 = t1751*t1779;
  t1830 = -1.*t1750*t1771;
  t1834 = t1826 + t1830;
  t1837 = Cos(var1[10]);
  t1838 = -1.*t1837;
  t1840 = 1. + t1838;
  t1845 = Sin(var1[10]);
  t1849 = -1.*t1798*t1807;
  t1850 = t1790*t1834;
  t1851 = t1849 + t1850;
  t1856 = t1790*t1807;
  t1857 = t1798*t1834;
  t1859 = t1856 + t1857;
  t1861 = Cos(var1[11]);
  t1862 = -1.*t1861;
  t1864 = 1. + t1862;
  t1866 = Sin(var1[11]);
  t1872 = t1845*t1851;
  t1873 = t1837*t1859;
  t1875 = t1872 + t1873;
  t1882 = t1837*t1851;
  t1885 = -1.*t1845*t1859;
  t1887 = t1882 + t1885;
  t1890 = Cos(var1[12]);
  t1891 = -1.*t1890;
  t1894 = 1. + t1891;
  t1898 = Sin(var1[12]);
  t1903 = -1.*t1866*t1875;
  t1905 = t1861*t1887;
  t1907 = t1903 + t1905;
  t1915 = t1861*t1875;
  t1916 = t1866*t1887;
  t1918 = t1915 + t1916;
  t1512 = -1.*t1481;
  t1541 = 1. + t1512;
  t1550 = 0.135*t1541;
  t1552 = 0. + t1550;
  t1651 = -0.135*t1635;
  t1662 = 0. + t1651;
  t1931 = -1.*t1576*t1595;
  t1932 = t1555*t1616*t1621;
  t1933 = t1931 + t1932;
  t1935 = t1555*t1576*t1616;
  t1936 = t1595*t1621;
  t1937 = t1935 + t1936;
  t1700 = 0.135*t1697;
  t1702 = 0.049*t1701;
  t1703 = 0. + t1700 + t1702;
  t1706 = -0.049*t1697;
  t1710 = 0.135*t1701;
  t1723 = 0. + t1706 + t1710;
  t1939 = t1481*t1933;
  t1940 = t1937*t1635;
  t1941 = t1939 + t1940;
  t1766 = -0.049*t1760;
  t1772 = -0.09*t1771;
  t1775 = 0. + t1766 + t1772;
  t1780 = -0.09*t1760;
  t1781 = 0.049*t1771;
  t1782 = 0. + t1780 + t1781;
  t1797 = -0.049*t1795;
  t1802 = -0.21*t1798;
  t1803 = 0. + t1797 + t1802;
  t1950 = t1555*t1705*t1691;
  t1952 = t1941*t1701;
  t1953 = t1950 + t1952;
  t1956 = t1481*t1937;
  t1957 = -1.*t1933*t1635;
  t1959 = t1956 + t1957;
  t1813 = -0.21*t1795;
  t1820 = 0.049*t1798;
  t1825 = 0. + t1813 + t1820;
  t1841 = -0.2707*t1840;
  t1846 = 0.0016*t1845;
  t1847 = 0. + t1841 + t1846;
  t1962 = t1751*t1953;
  t1963 = t1959*t1771;
  t1964 = t1962 + t1963;
  t1966 = t1751*t1959;
  t1968 = -1.*t1953*t1771;
  t1969 = t1966 + t1968;
  t1853 = -0.0016*t1840;
  t1854 = -0.2707*t1845;
  t1855 = 0. + t1853 + t1854;
  t1865 = 0.0184*t1864;
  t1869 = -0.7055*t1866;
  t1870 = 0. + t1865 + t1869;
  t1972 = -1.*t1798*t1964;
  t1973 = t1790*t1969;
  t1975 = t1972 + t1973;
  t1978 = t1790*t1964;
  t1980 = t1798*t1969;
  t1981 = t1978 + t1980;
  t1878 = -0.7055*t1864;
  t1879 = -0.0184*t1866;
  t1881 = 0. + t1878 + t1879;
  t1895 = -1.1135*t1894;
  t1900 = 0.0216*t1898;
  t1901 = 0. + t1895 + t1900;
  t1984 = t1845*t1975;
  t1985 = t1837*t1981;
  t1986 = t1984 + t1985;
  t1988 = t1837*t1975;
  t1989 = -1.*t1845*t1981;
  t1990 = t1988 + t1989;
  t1910 = -0.0216*t1894;
  t1912 = -1.1135*t1898;
  t1913 = 0. + t1910 + t1912;
  t1992 = -1.*t1866*t1986;
  t1993 = t1861*t1990;
  t1994 = t1992 + t1993;
  t1996 = t1861*t1986;
  t1997 = t1866*t1990;
  t1998 = t1996 + t1997;
  t2012 = t1555*t1705*t1481*t1621;
  t2013 = t1555*t1705*t1576*t1635;
  t2014 = t2012 + t2013;
  t2021 = -1.*t1555*t1691*t1616;
  t2022 = t2014*t1701;
  t2023 = t2021 + t2022;
  t2025 = t1555*t1705*t1576*t1481;
  t2026 = -1.*t1555*t1705*t1621*t1635;
  t2027 = t2025 + t2026;
  t2029 = t1751*t2023;
  t2030 = t2027*t1771;
  t2031 = t2029 + t2030;
  t2033 = t1751*t2027;
  t2034 = -1.*t2023*t1771;
  t2035 = t2033 + t2034;
  t2037 = -1.*t1798*t2031;
  t2038 = t1790*t2035;
  t2039 = t2037 + t2038;
  t2041 = t1790*t2031;
  t2042 = t1798*t2035;
  t2043 = t2041 + t2042;
  t2045 = t1845*t2039;
  t2046 = t1837*t2043;
  t2047 = t2045 + t2046;
  t2049 = t1837*t2039;
  t2050 = -1.*t1845*t2043;
  t2051 = t2049 + t2050;
  t2053 = -1.*t1866*t2047;
  t2054 = t1861*t2051;
  t2055 = t2053 + t2054;
  t2057 = t1861*t2047;
  t2058 = t1866*t2051;
  t2059 = t2057 + t2058;
  t2072 = t1705*t1481*t1595*t1621;
  t2073 = t1705*t1576*t1595*t1635;
  t2074 = t2072 + t2073;
  t2081 = -1.*t1691*t1595*t1616;
  t2082 = t2074*t1701;
  t2083 = t2081 + t2082;
  t2085 = t1705*t1576*t1481*t1595;
  t2086 = -1.*t1705*t1595*t1621*t1635;
  t2087 = t2085 + t2086;
  t2089 = t1751*t2083;
  t2090 = t2087*t1771;
  t2091 = t2089 + t2090;
  t2093 = t1751*t2087;
  t2094 = -1.*t2083*t1771;
  t2095 = t2093 + t2094;
  t2097 = -1.*t1798*t2091;
  t2098 = t1790*t2095;
  t2099 = t2097 + t2098;
  t2101 = t1790*t2091;
  t2102 = t1798*t2095;
  t2103 = t2101 + t2102;
  t2105 = t1845*t2099;
  t2106 = t1837*t2103;
  t2107 = t2105 + t2106;
  t2109 = t1837*t2099;
  t2110 = -1.*t1845*t2103;
  t2111 = t2109 + t2110;
  t2113 = -1.*t1866*t2107;
  t2114 = t1861*t2111;
  t2115 = t2113 + t2114;
  t2117 = t1861*t2107;
  t2118 = t1866*t2111;
  t2119 = t2117 + t2118;
  t2132 = -1.*t1481*t1616*t1621;
  t2133 = -1.*t1576*t1616*t1635;
  t2134 = t2132 + t2133;
  t2141 = -1.*t1705*t1691;
  t2142 = t2134*t1701;
  t2143 = t2141 + t2142;
  t2145 = -1.*t1576*t1481*t1616;
  t2146 = t1616*t1621*t1635;
  t2147 = t2145 + t2146;
  t2149 = t1751*t2143;
  t2150 = t2147*t1771;
  t2151 = t2149 + t2150;
  t2153 = t1751*t2147;
  t2154 = -1.*t2143*t1771;
  t2155 = t2153 + t2154;
  t2157 = -1.*t1798*t2151;
  t2158 = t1790*t2155;
  t2159 = t2157 + t2158;
  t2161 = t1790*t2151;
  t2162 = t1798*t2155;
  t2163 = t2161 + t2162;
  t2165 = t1845*t2159;
  t2166 = t1837*t2163;
  t2167 = t2165 + t2166;
  t2169 = t1837*t2159;
  t2170 = -1.*t1845*t2163;
  t2171 = t2169 + t2170;
  t2173 = -1.*t1866*t2167;
  t2174 = t1861*t2171;
  t2175 = t2173 + t2174;
  t2177 = t1861*t2167;
  t2178 = t1866*t2171;
  t2179 = t2177 + t2178;
  t2191 = t1576*t1595;
  t2192 = -1.*t1555*t1616*t1621;
  t2193 = t2191 + t2192;
  t2195 = t2193*t1635;
  t2196 = t1956 + t2195;
  t2200 = t1481*t2193;
  t2201 = -1.*t1937*t1635;
  t2202 = t2200 + t2201;
  t2204 = t1751*t2196*t1701;
  t2205 = t2202*t1771;
  t2206 = t2204 + t2205;
  t2208 = t1751*t2202;
  t2209 = -1.*t2196*t1701*t1771;
  t2210 = t2208 + t2209;
  t2212 = -1.*t1798*t2206;
  t2213 = t1790*t2210;
  t2214 = t2212 + t2213;
  t2216 = t1790*t2206;
  t2217 = t1798*t2210;
  t2218 = t2216 + t2217;
  t2220 = t1845*t2214;
  t2221 = t1837*t2218;
  t2222 = t2220 + t2221;
  t2224 = t1837*t2214;
  t2225 = -1.*t1845*t2218;
  t2226 = t2224 + t2225;
  t2228 = -1.*t1866*t2222;
  t2229 = t1861*t2226;
  t2230 = t2228 + t2229;
  t2232 = t1861*t2222;
  t2233 = t1866*t2226;
  t2234 = t2232 + t2233;
  t2245 = t1576*t1595*t1616;
  t2246 = -1.*t1555*t1621;
  t2247 = t2245 + t2246;
  t2250 = t1481*t2247;
  t2251 = t1627*t1635;
  t2252 = t2250 + t2251;
  t2256 = -1.*t2247*t1635;
  t2257 = t1675 + t2256;
  t2259 = t1751*t2252*t1701;
  t2260 = t2257*t1771;
  t2261 = t2259 + t2260;
  t2263 = t1751*t2257;
  t2264 = -1.*t2252*t1701*t1771;
  t2265 = t2263 + t2264;
  t2267 = -1.*t1798*t2261;
  t2268 = t1790*t2265;
  t2269 = t2267 + t2268;
  t2271 = t1790*t2261;
  t2272 = t1798*t2265;
  t2273 = t2271 + t2272;
  t2275 = t1845*t2269;
  t2276 = t1837*t2273;
  t2277 = t2275 + t2276;
  t2279 = t1837*t2269;
  t2280 = -1.*t1845*t2273;
  t2281 = t2279 + t2280;
  t2283 = -1.*t1866*t2277;
  t2284 = t1861*t2281;
  t2285 = t2283 + t2284;
  t2287 = t1861*t2277;
  t2288 = t1866*t2281;
  t2289 = t2287 + t2288;
  t2302 = t1705*t1576*t1481;
  t2303 = -1.*t1705*t1621*t1635;
  t2304 = t2302 + t2303;
  t2308 = -1.*t1705*t1481*t1621;
  t2309 = -1.*t1705*t1576*t1635;
  t2310 = t2308 + t2309;
  t2312 = t1751*t2304*t1701;
  t2313 = t2310*t1771;
  t2314 = t2312 + t2313;
  t2316 = t1751*t2310;
  t2317 = -1.*t2304*t1701*t1771;
  t2318 = t2316 + t2317;
  t2320 = -1.*t1798*t2314;
  t2321 = t1790*t2318;
  t2322 = t2320 + t2321;
  t2324 = t1790*t2314;
  t2325 = t1798*t2318;
  t2326 = t2324 + t2325;
  t2328 = t1845*t2322;
  t2329 = t1837*t2326;
  t2330 = t2328 + t2329;
  t2332 = t1837*t2322;
  t2333 = -1.*t1845*t2326;
  t2334 = t2332 + t2333;
  t2336 = -1.*t1866*t2330;
  t2337 = t1861*t2334;
  t2338 = t2336 + t2337;
  t2340 = t1861*t2330;
  t2341 = t1866*t2334;
  t2342 = t2340 + t2341;
  t2358 = -1.*t1481*t1933;
  t2359 = t2358 + t2201;
  t2361 = t1751*t1959*t1701;
  t2362 = t2359*t1771;
  t2363 = t2361 + t2362;
  t2365 = t1751*t2359;
  t2366 = -1.*t1959*t1701*t1771;
  t2367 = t2365 + t2366;
  t2369 = -1.*t1798*t2363;
  t2370 = t1790*t2367;
  t2371 = t2369 + t2370;
  t2373 = t1790*t2363;
  t2374 = t1798*t2367;
  t2375 = t2373 + t2374;
  t2377 = t1845*t2371;
  t2378 = t1837*t2375;
  t2379 = t2377 + t2378;
  t2381 = t1837*t2371;
  t2382 = -1.*t1845*t2375;
  t2383 = t2381 + t2382;
  t2385 = -1.*t1866*t2379;
  t2386 = t1861*t2383;
  t2387 = t2385 + t2386;
  t2389 = t1861*t2379;
  t2390 = t1866*t2383;
  t2391 = t2389 + t2390;
  t2403 = t1555*t1576;
  t2404 = t1595*t1616*t1621;
  t2405 = t2403 + t2404;
  t2407 = -1.*t2405*t1635;
  t2408 = t2250 + t2407;
  t2412 = -1.*t1481*t2405;
  t2413 = t2412 + t2256;
  t2415 = t1751*t2408*t1701;
  t2416 = t2413*t1771;
  t2417 = t2415 + t2416;
  t2419 = t1751*t2413;
  t2420 = -1.*t2408*t1701*t1771;
  t2421 = t2419 + t2420;
  t2423 = -1.*t1798*t2417;
  t2424 = t1790*t2421;
  t2425 = t2423 + t2424;
  t2427 = t1790*t2417;
  t2428 = t1798*t2421;
  t2429 = t2427 + t2428;
  t2431 = t1845*t2425;
  t2432 = t1837*t2429;
  t2433 = t2431 + t2432;
  t2435 = t1837*t2425;
  t2436 = -1.*t1845*t2429;
  t2437 = t2435 + t2436;
  t2439 = -1.*t1866*t2433;
  t2440 = t1861*t2437;
  t2441 = t2439 + t2440;
  t2443 = t1861*t2433;
  t2444 = t1866*t2437;
  t2445 = t2443 + t2444;
  t2305 = 0.1305*t1691*t2304;
  t2306 = t2304*t1703;
  t2307 = t2304*t1701*t1775;
  t2311 = t2310*t1782;
  t2315 = t1803*t2314;
  t2319 = t1825*t2318;
  t2323 = t1847*t2322;
  t2327 = t1855*t2326;
  t2331 = t1870*t2330;
  t2335 = t1881*t2334;
  t2339 = t1901*t2338;
  t2343 = t1913*t2342;
  t2344 = t1898*t2338;
  t2345 = t1890*t2342;
  t2346 = t2344 + t2345;
  t2347 = 0.0306*t2346;
  t2348 = t1890*t2338;
  t2349 = -1.*t1898*t2342;
  t2350 = t2348 + t2349;
  t2351 = -1.1312*t2350;
  t1945 = t1691*t1941;
  t1946 = -1.*t1555*t1705*t1701;
  t1947 = t1945 + t1946;
  t2473 = -1.*t1751*t1798*t1947;
  t2474 = -1.*t1790*t1947*t1771;
  t2475 = t2473 + t2474;
  t2477 = t1790*t1751*t1947;
  t2478 = -1.*t1798*t1947*t1771;
  t2479 = t2477 + t2478;
  t2481 = t1845*t2475;
  t2482 = t1837*t2479;
  t2483 = t2481 + t2482;
  t2485 = t1837*t2475;
  t2486 = -1.*t1845*t2479;
  t2487 = t2485 + t2486;
  t2489 = -1.*t1866*t2483;
  t2490 = t1861*t2487;
  t2491 = t2489 + t2490;
  t2493 = t1861*t2483;
  t2494 = t1866*t2487;
  t2495 = t2493 + t2494;
  t2459 = 0.135*t1691;
  t2460 = -0.049*t1701;
  t2461 = t2459 + t2460;
  t2463 = 0.049*t1691;
  t2464 = t2463 + t1710;
  t2507 = t1481*t2405;
  t2508 = t2247*t1635;
  t2509 = t2507 + t2508;
  t2511 = t1691*t2509;
  t2512 = -1.*t1705*t1595*t1701;
  t2513 = t2511 + t2512;
  t2520 = -1.*t1751*t1798*t2513;
  t2521 = -1.*t1790*t2513*t1771;
  t2522 = t2520 + t2521;
  t2524 = t1790*t1751*t2513;
  t2525 = -1.*t1798*t2513*t1771;
  t2526 = t2524 + t2525;
  t2528 = t1845*t2522;
  t2529 = t1837*t2526;
  t2530 = t2528 + t2529;
  t2532 = t1837*t2522;
  t2533 = -1.*t1845*t2526;
  t2534 = t2532 + t2533;
  t2536 = -1.*t1866*t2530;
  t2537 = t1861*t2534;
  t2538 = t2536 + t2537;
  t2540 = t1861*t2530;
  t2541 = t1866*t2534;
  t2542 = t2540 + t2541;
  t2554 = t1705*t1481*t1621;
  t2555 = t1705*t1576*t1635;
  t2556 = t2554 + t2555;
  t2558 = t1691*t2556;
  t2559 = t1616*t1701;
  t2560 = t2558 + t2559;
  t2568 = -1.*t1751*t1798*t2560;
  t2569 = -1.*t1790*t2560*t1771;
  t2570 = t2568 + t2569;
  t2572 = t1790*t1751*t2560;
  t2573 = -1.*t1798*t2560*t1771;
  t2574 = t2572 + t2573;
  t2576 = t1845*t2570;
  t2577 = t1837*t2574;
  t2578 = t2576 + t2577;
  t2580 = t1837*t2570;
  t2581 = -1.*t1845*t2574;
  t2582 = t2580 + t2581;
  t2584 = -1.*t1866*t2578;
  t2585 = t1861*t2582;
  t2586 = t2584 + t2585;
  t2588 = t1861*t2578;
  t2589 = t1866*t2582;
  t2590 = t2588 + t2589;
  t2608 = -1.*t1751*t1953;
  t2609 = -1.*t1959*t1771;
  t2610 = t2608 + t2609;
  t2613 = t1798*t2610;
  t2614 = t2613 + t1973;
  t2616 = t1790*t2610;
  t2617 = -1.*t1798*t1969;
  t2618 = t2616 + t2617;
  t2620 = -1.*t1845*t2614;
  t2621 = t1837*t2618;
  t2622 = t2620 + t2621;
  t2624 = t1837*t2614;
  t2625 = t1845*t2618;
  t2626 = t2624 + t2625;
  t2628 = t1866*t2622;
  t2629 = t1861*t2626;
  t2630 = t2628 + t2629;
  t2632 = t1861*t2622;
  t2633 = -1.*t1866*t2626;
  t2634 = t2632 + t2633;
  t2601 = 0.049*t1751;
  t2602 = t2601 + t1772;
  t2604 = -0.09*t1751;
  t2605 = -0.049*t1771;
  t2606 = t2604 + t2605;
  t2646 = t1705*t1691*t1595;
  t2647 = t2509*t1701;
  t2648 = t2646 + t2647;
  t2650 = -1.*t1751*t2648;
  t2651 = -1.*t2408*t1771;
  t2652 = t2650 + t2651;
  t2654 = t1751*t2408;
  t2655 = -1.*t2648*t1771;
  t2656 = t2654 + t2655;
  t2658 = t1798*t2652;
  t2659 = t1790*t2656;
  t2660 = t2658 + t2659;
  t2662 = t1790*t2652;
  t2663 = -1.*t1798*t2656;
  t2664 = t2662 + t2663;
  t2666 = -1.*t1845*t2660;
  t2667 = t1837*t2664;
  t2668 = t2666 + t2667;
  t2670 = t1837*t2660;
  t2671 = t1845*t2664;
  t2672 = t2670 + t2671;
  t2674 = t1866*t2668;
  t2675 = t1861*t2672;
  t2676 = t2674 + t2675;
  t2678 = t1861*t2668;
  t2679 = -1.*t1866*t2672;
  t2680 = t2678 + t2679;
  t2692 = -1.*t1691*t1616;
  t2693 = t2556*t1701;
  t2694 = t2692 + t2693;
  t2696 = -1.*t1751*t2694;
  t2697 = -1.*t2304*t1771;
  t2698 = t2696 + t2697;
  t2700 = t1751*t2304;
  t2701 = -1.*t2694*t1771;
  t2702 = t2700 + t2701;
  t2704 = t1798*t2698;
  t2705 = t1790*t2702;
  t2706 = t2704 + t2705;
  t2708 = t1790*t2698;
  t2709 = -1.*t1798*t2702;
  t2710 = t2708 + t2709;
  t2712 = -1.*t1845*t2706;
  t2713 = t1837*t2710;
  t2714 = t2712 + t2713;
  t2716 = t1837*t2706;
  t2717 = t1845*t2710;
  t2718 = t2716 + t2717;
  t2720 = t1866*t2714;
  t2721 = t1861*t2718;
  t2722 = t2720 + t2721;
  t2724 = t1861*t2714;
  t2725 = -1.*t1866*t2718;
  t2726 = t2724 + t2725;
  t2745 = -1.*t1790*t1964;
  t2746 = t2745 + t2617;
  t2748 = -1.*t1845*t1975;
  t2749 = t1837*t2746;
  t2750 = t2748 + t2749;
  t2752 = t1845*t2746;
  t2753 = t1988 + t2752;
  t2755 = t1866*t2750;
  t2756 = t1861*t2753;
  t2757 = t2755 + t2756;
  t2759 = t1861*t2750;
  t2760 = -1.*t1866*t2753;
  t2761 = t2759 + t2760;
  t2737 = -0.21*t1790;
  t2738 = -0.049*t1798;
  t2739 = t2737 + t2738;
  t2741 = 0.049*t1790;
  t2742 = t2741 + t1802;
  t2772 = t1751*t2648;
  t2773 = t2408*t1771;
  t2774 = t2772 + t2773;
  t2777 = -1.*t1798*t2774;
  t2778 = t2777 + t2659;
  t2780 = -1.*t1790*t2774;
  t2781 = t2780 + t2663;
  t2783 = -1.*t1845*t2778;
  t2784 = t1837*t2781;
  t2785 = t2783 + t2784;
  t2787 = t1837*t2778;
  t2788 = t1845*t2781;
  t2789 = t2787 + t2788;
  t2791 = t1866*t2785;
  t2792 = t1861*t2789;
  t2793 = t2791 + t2792;
  t2795 = t1861*t2785;
  t2796 = -1.*t1866*t2789;
  t2797 = t2795 + t2796;
  t2808 = t1751*t2694;
  t2809 = t2304*t1771;
  t2810 = t2808 + t2809;
  t2813 = -1.*t1798*t2810;
  t2814 = t2813 + t2705;
  t2816 = -1.*t1790*t2810;
  t2817 = t2816 + t2709;
  t2819 = -1.*t1845*t2814;
  t2820 = t1837*t2817;
  t2821 = t2819 + t2820;
  t2823 = t1837*t2814;
  t2824 = t1845*t2817;
  t2825 = t2823 + t2824;
  t2827 = t1866*t2821;
  t2828 = t1861*t2825;
  t2829 = t2827 + t2828;
  t2831 = t1861*t2821;
  t2832 = -1.*t1866*t2825;
  t2833 = t2831 + t2832;
  t2851 = -1.*t1837*t1981;
  t2852 = t2748 + t2851;
  t2855 = t1866*t2852;
  t2856 = t2855 + t1993;
  t2858 = t1861*t2852;
  t2859 = -1.*t1866*t1990;
  t2860 = t2858 + t2859;
  t2844 = 0.0016*t1837;
  t2845 = t2844 + t1854;
  t2847 = -0.2707*t1837;
  t2848 = -0.0016*t1845;
  t2849 = t2847 + t2848;
  t2872 = t1790*t2774;
  t2873 = t1798*t2656;
  t2874 = t2872 + t2873;
  t2876 = -1.*t1837*t2874;
  t2877 = t2783 + t2876;
  t2879 = -1.*t1845*t2874;
  t2880 = t2787 + t2879;
  t2882 = t1866*t2877;
  t2883 = t1861*t2880;
  t2884 = t2882 + t2883;
  t2886 = t1861*t2877;
  t2887 = -1.*t1866*t2880;
  t2888 = t2886 + t2887;
  t2900 = t1790*t2810;
  t2901 = t1798*t2702;
  t2902 = t2900 + t2901;
  t2904 = -1.*t1837*t2902;
  t2905 = t2819 + t2904;
  t2907 = -1.*t1845*t2902;
  t2908 = t2823 + t2907;
  t2910 = t1866*t2905;
  t2911 = t1861*t2908;
  t2912 = t2910 + t2911;
  t2914 = t1861*t2905;
  t2915 = -1.*t1866*t2908;
  t2916 = t2914 + t2915;
  t2935 = -1.*t1861*t1986;
  t2936 = t2935 + t2859;
  t2005 = t1890*t1994;
  t2927 = -0.7055*t1861;
  t2928 = 0.0184*t1866;
  t2929 = t2927 + t2928;
  t2931 = -0.0184*t1861;
  t2932 = t2931 + t1869;
  t2946 = t1845*t2778;
  t2947 = t1837*t2874;
  t2948 = t2946 + t2947;
  t2951 = -1.*t1866*t2948;
  t2952 = t2951 + t2883;
  t2954 = -1.*t1861*t2948;
  t2955 = t2954 + t2887;
  t2966 = t1845*t2814;
  t2967 = t1837*t2902;
  t2968 = t2966 + t2967;
  t2971 = -1.*t1866*t2968;
  t2972 = t2971 + t2911;
  t2974 = -1.*t1861*t2968;
  t2975 = t2974 + t2915;
  t2938 = -1.*t1898*t1994;
  t2006 = -1.*t1898*t1998;
  t2007 = t2005 + t2006;
  t2986 = 0.0216*t1890;
  t2987 = t2986 + t1912;
  t2989 = -1.1135*t1890;
  t2990 = -0.0216*t1898;
  t2991 = t2989 + t2990;
  t2957 = -1.*t1898*t2952;
  t2999 = t1861*t2948;
  t3000 = t1866*t2880;
  t3001 = t2999 + t3000;
  t2961 = t1890*t2952;
  t2977 = -1.*t1898*t2972;
  t3011 = t1861*t2968;
  t3012 = t1866*t2908;
  t3013 = t3011 + t3012;
  t2981 = t1890*t2972;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1552*t1627 + t1631*t1662 + t1685*t1703 + 0.1305*(t1685*t1691 + t1595*t1701*t1705) - 1.*t1595*t1705*t1723 + t1750*t1775 + t1779*t1782 + t1803*t1807 + t1825*t1834 + t1847*t1851 + t1855*t1859 + t1870*t1875 + t1881*t1887 + t1901*t1907 + t1913*t1918 + 0.0306*(t1898*t1907 + t1890*t1918) - 1.1312*(t1890*t1907 - 1.*t1898*t1918);
  p_output1[10]=t1555*t1705*t1723 + t1552*t1933 + t1662*t1937 + t1703*t1941 + 0.1305*t1947 + t1775*t1953 + t1782*t1959 + t1803*t1964 + t1825*t1969 + t1847*t1975 + t1855*t1981 + t1870*t1986 + t1881*t1990 + t1901*t1994 + t1913*t1998 + 0.0306*(t1898*t1994 + t1890*t1998) - 1.1312*t2007;
  p_output1[11]=0;
  p_output1[12]=t1552*t1555*t1621*t1705 + t1555*t1576*t1662*t1705 - 1.*t1555*t1616*t1723 + t1703*t2014 + 0.1305*(t1555*t1616*t1701 + t1691*t2014) + t1775*t2023 + t1782*t2027 + t1803*t2031 + t1825*t2035 + t1847*t2039 + t1855*t2043 + t1870*t2047 + t1881*t2051 + t1901*t2055 + t1913*t2059 + 0.0306*(t1898*t2055 + t1890*t2059) - 1.1312*(t1890*t2055 - 1.*t1898*t2059);
  p_output1[13]=t1552*t1595*t1621*t1705 + t1576*t1595*t1662*t1705 - 1.*t1595*t1616*t1723 + t1703*t2074 + 0.1305*(t1595*t1616*t1701 + t1691*t2074) + t1775*t2083 + t1782*t2087 + t1803*t2091 + t1825*t2095 + t1847*t2099 + t1855*t2103 + t1870*t2107 + t1881*t2111 + t1901*t2115 + t1913*t2119 + 0.0306*(t1898*t2115 + t1890*t2119) - 1.1312*(t1890*t2115 - 1.*t1898*t2119);
  p_output1[14]=-1.*t1552*t1616*t1621 - 1.*t1576*t1616*t1662 - 1.*t1705*t1723 + t1703*t2134 + 0.1305*(t1701*t1705 + t1691*t2134) + t1775*t2143 + t1782*t2147 + t1803*t2151 + t1825*t2155 + t1847*t2159 + t1855*t2163 + t1870*t2167 + t1881*t2171 + t1901*t2175 + t1913*t2179 + 0.0306*(t1898*t2175 + t1890*t2179) - 1.1312*(t1890*t2175 - 1.*t1898*t2179);
  p_output1[15]=t1552*t1937 + t1662*t2193 + 0.1305*t1691*t2196 + t1703*t2196 + t1701*t1775*t2196 + t1782*t2202 + t1803*t2206 + t1825*t2210 + t1847*t2214 + t1855*t2218 + t1870*t2222 + t1881*t2226 + t1901*t2230 + t1913*t2234 + 0.0306*(t1898*t2230 + t1890*t2234) - 1.1312*(t1890*t2230 - 1.*t1898*t2234);
  p_output1[16]=t1627*t1662 + t1552*t2247 + 0.1305*t1691*t2252 + t1703*t2252 + t1701*t1775*t2252 + t1782*t2257 + t1803*t2261 + t1825*t2265 + t1847*t2269 + t1855*t2273 + t1870*t2277 + t1881*t2281 + t1901*t2285 + t1913*t2289 + 0.0306*(t1898*t2285 + t1890*t2289) - 1.1312*(t1890*t2285 - 1.*t1898*t2289);
  p_output1[17]=t1552*t1576*t1705 - 1.*t1621*t1662*t1705 + t2305 + t2306 + t2307 + t2311 + t2315 + t2319 + t2323 + t2327 + t2331 + t2335 + t2339 + t2343 + t2347 + t2351;
  p_output1[18]=0.135*t1635*t1933 - 0.135*t1481*t1937 + 0.1305*t1691*t1959 + t1703*t1959 + t1701*t1775*t1959 + t1782*t2359 + t1803*t2363 + t1825*t2367 + t1847*t2371 + t1855*t2375 + t1870*t2379 + t1881*t2383 + t1901*t2387 + t1913*t2391 + 0.0306*(t1898*t2387 + t1890*t2391) - 1.1312*(t1890*t2387 - 1.*t1898*t2391);
  p_output1[19]=-0.135*t1481*t2247 + 0.135*t1635*t2405 + 0.1305*t1691*t2408 + t1703*t2408 + t1701*t1775*t2408 + t1782*t2413 + t1803*t2417 + t1825*t2421 + t1847*t2425 + t1855*t2429 + t1870*t2433 + t1881*t2437 + t1901*t2441 + t1913*t2445 + 0.0306*(t1898*t2441 + t1890*t2445) - 1.1312*(t1890*t2441 - 1.*t1898*t2445);
  p_output1[20]=-0.135*t1481*t1576*t1705 + 0.135*t1621*t1635*t1705 + t2305 + t2306 + t2307 + t2311 + t2315 + t2319 + t2323 + t2327 + t2331 + t2335 + t2339 + t2343 + t2347 + t2351;
  p_output1[21]=0.1305*(-1.*t1555*t1691*t1705 - 1.*t1701*t1941) + t1775*t1947 + t1751*t1803*t1947 - 1.*t1771*t1825*t1947 + t1555*t1705*t2461 + t1941*t2464 + t1847*t2475 + t1855*t2479 + t1870*t2483 + t1881*t2487 + t1901*t2491 + t1913*t2495 + 0.0306*(t1898*t2491 + t1890*t2495) - 1.1312*(t1890*t2491 - 1.*t1898*t2495);
  p_output1[22]=t1595*t1705*t2461 + t2464*t2509 + 0.1305*(t1738 - 1.*t1701*t2509) + t1775*t2513 + t1751*t1803*t2513 - 1.*t1771*t1825*t2513 + t1847*t2522 + t1855*t2526 + t1870*t2530 + t1881*t2534 + t1901*t2538 + t1913*t2542 + 0.0306*(t1898*t2538 + t1890*t2542) - 1.1312*(t1890*t2538 - 1.*t1898*t2542);
  p_output1[23]=-1.*t1616*t2461 + t2464*t2556 + 0.1305*(t1616*t1691 - 1.*t1701*t2556) + t1775*t2560 + t1751*t1803*t2560 - 1.*t1771*t1825*t2560 + t1847*t2570 + t1855*t2574 + t1870*t2578 + t1881*t2582 + t1901*t2586 + t1913*t2590 + 0.0306*(t1898*t2586 + t1890*t2590) - 1.1312*(t1890*t2586 - 1.*t1898*t2590);
  p_output1[24]=t1803*t1969 + t1959*t2602 + t1953*t2606 + t1825*t2610 + t1855*t2614 + t1847*t2618 + t1881*t2622 + t1870*t2626 + t1913*t2630 + t1901*t2634 - 1.1312*(-1.*t1898*t2630 + t1890*t2634) + 0.0306*(t1890*t2630 + t1898*t2634);
  p_output1[25]=t2408*t2602 + t2606*t2648 + t1825*t2652 + t1803*t2656 + t1855*t2660 + t1847*t2664 + t1881*t2668 + t1870*t2672 + t1913*t2676 + t1901*t2680 - 1.1312*(-1.*t1898*t2676 + t1890*t2680) + 0.0306*(t1890*t2676 + t1898*t2680);
  p_output1[26]=t2304*t2602 + t2606*t2694 + t1825*t2698 + t1803*t2702 + t1855*t2706 + t1847*t2710 + t1881*t2714 + t1870*t2718 + t1913*t2722 + t1901*t2726 - 1.1312*(-1.*t1898*t2722 + t1890*t2726) + 0.0306*(t1890*t2722 + t1898*t2726);
  p_output1[27]=t1855*t1975 + t1964*t2739 + t1969*t2742 + t1847*t2746 + t1881*t2750 + t1870*t2753 + t1913*t2757 + t1901*t2761 - 1.1312*(-1.*t1898*t2757 + t1890*t2761) + 0.0306*(t1890*t2757 + t1898*t2761);
  p_output1[28]=t2656*t2742 + t2739*t2774 + t1855*t2778 + t1847*t2781 + t1881*t2785 + t1870*t2789 + t1913*t2793 + t1901*t2797 - 1.1312*(-1.*t1898*t2793 + t1890*t2797) + 0.0306*(t1890*t2793 + t1898*t2797);
  p_output1[29]=t2702*t2742 + t2739*t2810 + t1855*t2814 + t1847*t2817 + t1881*t2821 + t1870*t2825 + t1913*t2829 + t1901*t2833 - 1.1312*(-1.*t1898*t2829 + t1890*t2833) + 0.0306*(t1890*t2829 + t1898*t2833);
  p_output1[30]=t1870*t1990 + t1975*t2845 + t1981*t2849 + t1881*t2852 + t1913*t2856 + t1901*t2860 - 1.1312*(-1.*t1898*t2856 + t1890*t2860) + 0.0306*(t1890*t2856 + t1898*t2860);
  p_output1[31]=t2778*t2845 + t2849*t2874 + t1881*t2877 + t1870*t2880 + t1913*t2884 + t1901*t2888 - 1.1312*(-1.*t1898*t2884 + t1890*t2888) + 0.0306*(t1890*t2884 + t1898*t2888);
  p_output1[32]=t2814*t2845 + t2849*t2902 + t1881*t2905 + t1870*t2908 + t1913*t2912 + t1901*t2916 - 1.1312*(-1.*t1898*t2912 + t1890*t2916) + 0.0306*(t1890*t2912 + t1898*t2916);
  p_output1[33]=t1913*t1994 + t1986*t2929 + t1990*t2932 + t1901*t2936 + 0.0306*(t2005 + t1898*t2936) - 1.1312*(t1890*t2936 + t2938);
  p_output1[34]=t2880*t2932 + t2929*t2948 + t1913*t2952 + t1901*t2955 - 1.1312*(t1890*t2955 + t2957) + 0.0306*(t1898*t2955 + t2961);
  p_output1[35]=t2908*t2932 + t2929*t2968 + t1913*t2972 + t1901*t2975 - 1.1312*(t1890*t2975 + t2977) + 0.0306*(t1898*t2975 + t2981);
  p_output1[36]=0.0306*t2007 - 1.1312*(-1.*t1890*t1998 + t2938) + t1994*t2987 + t1998*t2991;
  p_output1[37]=t2952*t2987 + t2991*t3001 - 1.1312*(t2957 - 1.*t1890*t3001) + 0.0306*(t2961 - 1.*t1898*t3001);
  p_output1[38]=t2972*t2987 + t2991*t3013 - 1.1312*(t2977 - 1.*t1890*t3013) + 0.0306*(t2981 - 1.*t1898*t3013);
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_LeftToeBottom_mex.hh"

namespace SymExpression
{

void J_LeftToeBottom_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
